#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –±–æ—Ç–æ–º
"""

import requests
import json
import time

def check_website():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞"""
    print("üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞...")
    try:
        response = requests.get("https://nexus-dark-market.onrender.com", timeout=10)
        if response.status_code == 200:
            print("   ‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print(f"   ‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–∞–π—Ç—É: {e}")
        return False

def check_webhook():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å webhook"""
    print("\nüîó –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook...")
    try:
        bot_token = "8458514538:AAFIAT7BrKelIHie9-JscBnOlAFd_V2qyMY"
        url = f"https://api.telegram.org/bot{bot_token}/getWebhookInfo"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            if data.get('ok'):
                webhook_info = data.get('result', {})
                webhook_url = webhook_info.get('url', '')
                pending_updates = webhook_info.get('pending_update_count', 0)
                
                print(f"   üìç Webhook URL: {webhook_url}")
                print(f"   üìä –û–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {pending_updates}")
                
                if webhook_url:
                    print("   ‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                    return True
                else:
                    print("   ‚ùå Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                    return False
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ API: {data}")
                return False
        else:
            print(f"   ‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook: {e}")
        return False

def test_webhook():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç webhook"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook...")
    try:
        webhook_url = "https://nexus-dark-market.onrender.com/telegram/webhook"
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        test_message = {
            "update_id": int(time.time()),
            "message": {
                "message_id": int(time.time()),
                "from": {
                    "id": 1172834372,
                    "is_bot": False,
                    "first_name": "Test",
                    "username": "test_admin"
                },
                "chat": {
                    "id": 1172834372,
                    "first_name": "Test",
                    "username": "test_admin",
                    "type": "private"
                },
                "date": int(time.time()),
                "text": "/start"
            }
        }
        
        response = requests.post(webhook_url, json=test_message, timeout=15)
        
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("   ‚úÖ Webhook —Ä–∞–±–æ—Ç–∞–µ—Ç")
                return True
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ webhook: {result}")
                return False
        else:
            print(f"   ‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook: {e}")
        return False

def test_bot_commands():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞"""
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞...")
    
    commands_to_test = [
        "/start",
        "stats",
        "users",
        "management",
        "telegram",
        "admin_settings",
        "help"
    ]
    
    webhook_url = "https://nexus-dark-market.onrender.com/telegram/webhook"
    
    for command in commands_to_test:
        print(f"   üì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {command}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        test_message = {
            "update_id": int(time.time()),
            "message": {
                "message_id": int(time.time()),
                "from": {
                    "id": 1172834372,
                    "is_bot": False,
                    "first_name": "Test",
                    "username": "test_admin"
                },
                "chat": {
                    "id": 1172834372,
                    "first_name": "Test",
                    "username": "test_admin",
                    "type": "private"
                },
                "date": int(time.time()),
                "text": command
            }
        }
        
        try:
            response = requests.post(webhook_url, json=test_message, timeout=10)
            
            if response.status_code == 200:
                result = response.json()
                if result.get('ok'):
                    print(f"      ‚úÖ {command} - —Ä–∞–±–æ—Ç–∞–µ—Ç")
                else:
                    print(f"      ‚ùå {command} - –æ—à–∏–±–∫–∞: {result}")
            else:
                print(f"      ‚ùå {command} - HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
                
        except Exception as e:
            print(f"      ‚ùå {command} - –æ—à–∏–±–∫–∞: {e}")
        
        time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏

def test_callback_queries():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç callback –∑–∞–ø—Ä–æ—Å—ã"""
    print("\nüîò –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ callback –∑–∞–ø—Ä–æ—Å–æ–≤...")
    
    callbacks_to_test = [
        "stats",
        "users",
        "management",
        "telegram",
        "admin_settings",
        "change_admin_username",
        "change_admin_password",
        "admin_info",
        "help",
        "main_menu"
    ]
    
    webhook_url = "https://nexus-dark-market.onrender.com/telegram/webhook"
    
    for callback in callbacks_to_test:
        print(f"   üîò –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {callback}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π callback –∑–∞–ø—Ä–æ—Å
        callback_query = {
            "id": f"test_{int(time.time())}",
            "from": {
                "id": 1172834372,
                "is_bot": False,
                "first_name": "Test",
                "username": "test_admin"
            },
            "message": {
                "message_id": 1,
                "from": {
                    "id": 1172834372,
                    "is_bot": False,
                    "first_name": "Test",
                    "username": "test_admin"
                },
                "chat": {
                    "id": 1172834372,
                    "first_name": "Test",
                    "username": "test_admin",
                    "type": "private"
                },
                "date": int(time.time()),
                "text": "/start"
            },
            "data": callback
        }
        
        webhook_data = {
            "update_id": int(time.time()),
            "callback_query": callback_query
        }
        
        try:
            response = requests.post(webhook_url, json=webhook_data, timeout=10)
            
            if response.status_code == 200:
                result = response.json()
                if result.get('ok'):
                    print(f"      ‚úÖ {callback} - —Ä–∞–±–æ—Ç–∞–µ—Ç")
                else:
                    print(f"      ‚ùå {callback} - –æ—à–∏–±–∫–∞: {result}")
            else:
                print(f"      ‚ùå {callback} - HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
                
        except Exception as e:
            print(f"      ‚ùå {callback} - –æ—à–∏–±–∫–∞: {e}")
        
        time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏

def setup_webhook():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç webhook"""
    print("\nüîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook...")
    try:
        bot_token = "8458514538:AAFIAT7BrKelIHie9-JscBnOlAFd_V2qyMY"
        webhook_url = "https://nexus-dark-market.onrender.com/telegram/webhook"
        
        url = f"https://api.telegram.org/bot{bot_token}/setWebhook"
        data = {"url": webhook_url}
        
        response = requests.post(url, json=data, timeout=10)
        
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("   ‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                return True
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook: {result}")
                return False
        else:
            print(f"   ‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú –° –ë–û–¢–û–ú")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∞–π—Ç
    website_ok = check_website()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
    webhook_ok = check_webhook()
    
    # –ï—Å–ª–∏ webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –µ–≥–æ
    if not webhook_ok:
        print("\nüîß Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º...")
        webhook_ok = setup_webhook()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook
    if webhook_ok:
        test_webhook()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
    if website_ok:
        test_bot_commands()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º callback –∑–∞–ø—Ä–æ—Å—ã
    if website_ok:
        test_callback_queries()
    
    print("\nüìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 50)
    
    if website_ok and webhook_ok:
        print("‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç!")
        print("   ‚Ä¢ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω")
        print("   ‚Ä¢ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        print("   ‚Ä¢ –ë–æ—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å")
        
        print("\nüí° –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("   1. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É @NexusDarkBot /start")
        print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –∫–Ω–æ–ø–∫–∏")
        print("   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å")
        
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:")
        if not website_ok:
            print("   ‚Ä¢ –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        if not webhook_ok:
            print("   ‚Ä¢ Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        
        print("\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ Render")
        print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")

if __name__ == "__main__":
    main()
