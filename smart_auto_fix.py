#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–£–º–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π —á–∏—Ç–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫–∏
"""

import requests
import json
import time
import subprocess
import re

def run_command(command):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É"""
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True, encoding='utf-8')
        return result.returncode == 0, result.stdout, result.stderr
    except Exception as e:
        return False, "", str(e)

def get_bot_message(webhook_url):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞"""
    print("üì± –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞...")
    
    # 1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º /start
    print("1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º /start")
    message = {
        "update_id": int(time.time()),
        "message": {
            "message_id": int(time.time()),
            "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
            "chat": {"id": 1172834372, "type": "private"},
            "date": int(time.time()),
            "text": "/start"
        }
    }
    response1 = requests.post(webhook_url, json=message, timeout=10)
    print(f"   –°—Ç–∞—Ç—É—Å: {response1.status_code}")
    time.sleep(2)
    
    # 2. –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞
    print("2. –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞")
    callback = {
        "update_id": int(time.time()),
        "callback_query": {
            "id": f"test_{int(time.time())}",
            "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
            "message": {
                "message_id": 1,
                "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
                "chat": {"id": 1172834372, "type": "private"},
                "date": int(time.time()),
                "text": "/start"
            },
            "data": "change_admin_username"
        }
    }
    response2 = requests.post(webhook_url, json=callback, timeout=10)
    print(f"   –°—Ç–∞—Ç—É—Å: {response2.status_code}")
    time.sleep(2)
    
    # 3. –í–≤–æ–¥–∏–º –ª–æ–≥–∏–Ω
    print("3. –í–≤–æ–¥–∏–º –ª–æ–≥–∏–Ω 'testuser123'")
    message = {
        "update_id": int(time.time()),
        "message": {
            "message_id": int(time.time()),
            "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
            "chat": {"id": 1172834372, "type": "private"},
            "date": int(time.time()),
            "text": "testuser123"
        }
    }
    response3 = requests.post(webhook_url, json=message, timeout=10)
    print(f"   –°—Ç–∞—Ç—É—Å: {response3.status_code}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    if response3.status_code == 200:
        result = response3.json()
        print(f"   –û—Ç–≤–µ—Ç: {result}")
        
        if result.get('ok'):
            if 'result' in result and 'text' in result['result']:
                bot_message = result['result']['text']
                print(f"   üì± –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞: {bot_message}")
                return bot_message
            else:
                print("   ‚ö†Ô∏è –ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ –≤ –æ—Ç–≤–µ—Ç–µ")
                return None
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ API: {result}")
            return None
    else:
        print(f"   ‚ùå HTTP –æ—à–∏–±–∫–∞: {response3.status_code}")
        return None

def analyze_bot_message(message):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∞"""
    if not message:
        return False, "–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"
    
    print(f"\nüîç –ê–Ω–∞–ª–∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞:")
    print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏
    error_patterns = [
        "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞",
        "‚ùå –û—à–∏–±–∫–∞",
        "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ",
        "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω",
        "‚ùå –ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω",
        "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ]
    
    for pattern in error_patterns:
        if pattern in message:
            print(f"   ‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–ê –û–®–ò–ë–ö–ê: {pattern}")
            return True, pattern
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —É—Å–ø–µ—Ö
    success_patterns = [
        "‚úÖ –õ–æ–≥–∏–Ω –∞–¥–º–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω",
        "‚úÖ –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω",
        "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",
        "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",
        "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–æ–º",
        "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–ª—å—à–µ –Ω–µ –∞–¥–º–∏–Ω",
        "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω",
        "üîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"
    ]
    
    for pattern in success_patterns:
        if pattern in message:
            print(f"   ‚úÖ –£–°–ü–ï–•: {pattern}")
            return False, "–£—Å–ø–µ—Ö"
    
    # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –Ω–∏ –æ—à–∏–±–∫—É, –Ω–∏ —É—Å–ø–µ—Ö
    print(f"   ‚ö†Ô∏è –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
    return False, "–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç"

def fix_telegram_bot(error_type):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–¥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏"""
    print(f"\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏: {error_type}")
    
    # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
    try:
        with open('telegram_bot.py', 'r', encoding='utf-8') as f:
            content = f.read()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return False
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏
    if "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞" in error_type:
        print("   –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥...")
        
        # –ò—â–µ–º –ø—Ä–æ–±–ª–µ–º–Ω–æ–µ –º–µ—Å—Ç–æ –≤ handle_admin_command
        if "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é" in content:
            # –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ –±–æ–ª–µ–µ –º—è–≥–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            old_text = "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"
            new_text = "üîß –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"
            content = content.replace(old_text, new_text)
            print("   ‚úÖ –ó–∞–º–µ–Ω–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
        if "if state:" not in content:
            print("   ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π")
            return False
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        debug_code = '''
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞
    print(f"üîç –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {state}")
    print(f"üîç –í–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {text}")'''
        
        if "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞" not in content:
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –∫–æ–¥ –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–æ—Å—Ç–æ—è–Ω–∏–π
            content = content.replace(
                "if state:",
                f"if state:{debug_code}"
            )
            print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞")
    
    elif "‚ùå –ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω" in error_type:
        print("   –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫ –∞–¥–º–∏–Ω–∞...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é change_admin_username
        if "User.query.filter_by(is_admin=True).first()" in content:
            print("   ‚úÖ –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∞ –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("   ‚ùå –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
    
    elif "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" in error_type:
        print("   –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if "User.query.filter_by(username=" in content:
            print("   ‚úÖ –§—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print("   ‚ùå –§—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return False
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    try:
        with open('telegram_bot.py', 'w', encoding='utf-8') as f:
            f.write(content)
        print("   ‚úÖ –§–∞–π–ª telegram_bot.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
        return True
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return False

def update_repository():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"""
    print("\nüöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
    success, stdout, stderr = run_command("git add .")
    if not success:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ git add: {stderr}")
        return False
    
    # –ö–æ–º–º–∏—Ç–∏–º
    success, stdout, stderr = run_command('git commit -m "Smart auto-fix: resolve bot error messages"')
    if not success:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ git commit: {stderr}")
        return False
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
    success, stdout, stderr = run_command("git push origin main")
    if not success:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ git push: {stderr}")
        return False
    
    print("   ‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω")
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –£–ú–ù–´–ô –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –°–ö–†–ò–ü–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")
    print("=" * 60)
    print("üì± –ß–∏—Ç–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫–∏")
    print()
    
    webhook_url = "https://nexus-dark-market.onrender.com/telegram/webhook"
    max_attempts = 3
    attempt = 1
    
    while attempt <= max_attempts:
        print(f"üîÑ –ü–û–ü–´–¢–ö–ê {attempt} –∏–∑ {max_attempts}")
        print("-" * 40)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞
        bot_message = get_bot_message(webhook_url)
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        has_error, error_type = analyze_bot_message(bot_message)
        
        if not has_error:
            print(f"\nüéâ –£–°–ü–ï–•! –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ {attempt}")
            print("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            break
        else:
            print(f"\n‚ùå –û–®–ò–ë–ö–ê –ù–ê –ü–û–ü–´–¢–ö–ï {attempt}: {error_type}")
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥
            if fix_telegram_bot(error_type):
                # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
                if update_repository():
                    print("‚è≥ –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è...")
                    time.sleep(30)
                else:
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
                    break
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥")
                break
        
        attempt += 1
    
    print("\nüìã –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢")
    print("=" * 60)
    
    if attempt <= max_attempts:
        print("‚úÖ –°–ö–†–ò–ü–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        print(f"   –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∑–∞ {attempt} –ø–æ–ø—ã—Ç–æ–∫")
        print("   –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ùå –°–ö–†–ò–ü–¢ –ù–ï –°–ú–û–ì –ò–°–ü–†–ê–í–ò–¢–¨ –û–®–ò–ë–ö–£!")
        print("   –î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫")
        print("   –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ")
    
    print("\nüåê –°—Å—ã–ª–∫–∏:")
    print("   ‚Ä¢ –ë–æ—Ç: @NexusDarkBot")
    print("   ‚Ä¢ –°–∞–π—Ç: https://nexus-dark-market.onrender.com")
    print("   ‚Ä¢ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/Rodeos2410/nexus-dark-market.git")

if __name__ == "__main__":
    main()
