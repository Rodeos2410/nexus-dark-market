#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import subprocess
import requests
import json
import time

def run_command(command):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É"""
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True, encoding='utf-8')
        return result.returncode == 0, result.stdout, result.stderr
    except Exception as e:
        return False, "", str(e)

def update_repo():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"""
    print("üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
    success, stdout, stderr = run_command("git add .")
    if not success:
        print(f"‚ùå –û—à–∏–±–∫–∞ git add: {stderr}")
        return False
    
    # –ö–æ–º–º–∏—Ç–∏–º
    success, stdout, stderr = run_command('git commit -m "Fix state management and add debug logging"')
    if not success:
        print(f"‚ùå –û—à–∏–±–∫–∞ git commit: {stderr}")
        return False
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
    success, stdout, stderr = run_command("git push origin main")
    if not success:
        print(f"‚ùå –û—à–∏–±–∫–∞ git push: {stderr}")
        return False
    
    print("‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω")
    return True

def test_login():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ª–æ–≥–∏–Ω–∞"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞...")
    
    webhook_url = "https://nexus-dark-market.onrender.com/telegram/webhook"
    
    # 1. /start
    print("1. /start")
    message = {
        "update_id": 1,
        "message": {
            "message_id": 1,
            "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
            "chat": {"id": 1172834372, "type": "private"},
            "date": int(time.time()),
            "text": "/start"
        }
    }
    requests.post(webhook_url, json=message, timeout=5)
    time.sleep(1)
    
    # 2. –ö–Ω–æ–ø–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞
    print("2. –ö–Ω–æ–ø–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞")
    callback = {
        "update_id": 2,
        "callback_query": {
            "id": "test",
            "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
            "message": {
                "message_id": 1,
                "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
                "chat": {"id": 1172834372, "type": "private"},
                "date": int(time.time()),
                "text": "/start"
            },
            "data": "change_admin_username"
        }
    }
    requests.post(webhook_url, json=callback, timeout=5)
    time.sleep(1)
    
    # 3. –í–≤–æ–¥ –ª–æ–≥–∏–Ω–∞
    print("3. –í–≤–æ–¥ –ª–æ–≥–∏–Ω–∞ 'testuser123'")
    message = {
        "update_id": 3,
        "message": {
            "message_id": 2,
            "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
            "chat": {"id": 1172834372, "type": "private"},
            "date": int(time.time()),
            "text": "testuser123"
        }
    }
    response = requests.post(webhook_url, json=message, timeout=5)
    
    print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
    if response.status_code == 200:
        result = response.json()
        print(f"   –û—Ç–≤–µ—Ç: {result}")
        
        if result.get('ok'):
            if 'result' in result and 'text' in result['result']:
                text = result['result']['text']
                print(f"   üì± –°–æ–æ–±—â–µ–Ω–∏–µ: {text}")
                
                if "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞" in text:
                    print("   ‚ùå –û–®–ò–ë–ö–ê –í–°–ï –ï–©–ï –ï–°–¢–¨!")
                    return False
                elif "‚úÖ –õ–æ–≥–∏–Ω –∞–¥–º–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω" in text:
                    print("   ‚úÖ –£–°–ü–ï–•!")
                    return True
                else:
                    print("   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç")
                    return False
            else:
                print("   ‚ö†Ô∏è –ù–µ—Ç —Ç–µ–∫—Å—Ç–∞")
                return False
        else:
            print("   ‚ùå –û—à–∏–±–∫–∞ API")
            return False
    else:
        print("   ‚ùå HTTP –æ—à–∏–±–∫–∞")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï")
    print("=" * 40)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    if update_repo():
        print("\n‚è≥ –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è...")
        time.sleep(30)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º
        success = test_login()
        
        print(f"\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢: {'‚úÖ –£—Å–ø–µ—Ö' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        
        if success:
            print("üéâ –û–®–ò–ë–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≤—Å–µ –µ—â–µ –µ—Å—Ç—å")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")

if __name__ == "__main__":
    main()
