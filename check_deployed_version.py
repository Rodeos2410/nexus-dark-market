#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import re

def check_deployed_version():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∫–∞–∫–∞—è –≤–µ—Ä—Å–∏—è –∫–æ–¥–∞ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –†–ê–ó–í–ï–†–ù–£–¢–û–ô –í–ï–†–°–ò–ò")
    print("=" * 40)
    
    base_url = "https://nexus-dark-market.onrender.com"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
    print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å...")
    try:
        response = requests.get(f"{base_url}/admin", timeout=10)
        content = response.text
        
        # –ò—â–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if "–ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö" in content:
            print("   ‚úÖ –ö–Ω–æ–ø–∫–∞ '–ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö' –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("   ‚ùå –ö–Ω–æ–ø–∫–∞ '–ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö' –ù–ï –Ω–∞–π–¥–µ–Ω–∞")
            
        # –ò—â–µ–º —ç–º–æ–¥–∑–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if "üóÑÔ∏è" in content:
            print("   ‚úÖ –≠–º–æ–¥–∑–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–æ")
        else:
            print("   ‚ùå –≠–º–æ–¥–∑–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ù–ï –Ω–∞–π–¥–µ–Ω–æ")
            
        # –ò—â–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        if "/admin/database" in content:
            print("   ‚úÖ –°—Å—ã–ª–∫–∞ '/admin/database' –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("   ‚ùå –°—Å—ã–ª–∫–∞ '/admin/database' –ù–ï –Ω–∞–π–¥–µ–Ω–∞")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞...")
    try:
        response = requests.get(f"{base_url}/login", timeout=10)
        content = response.text
        
        # –ò—â–µ–º –ø–æ–ª—è –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        if "auth_code" in content:
            print("   ‚úÖ –ü–æ–ª–µ 'auth_code' –Ω–∞–π–¥–µ–Ω–æ")
        else:
            print("   ‚ùå –ü–æ–ª–µ 'auth_code' –ù–ï –Ω–∞–π–¥–µ–Ω–æ")
            
        if "show_code_input" in content:
            print("   ‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è 'show_code_input' –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("   ‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è 'show_code_input' –ù–ï –Ω–∞–π–¥–µ–Ω–∞")
            
        if "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–æ–¥" in content:
            print("   ‚úÖ –ö–Ω–æ–ø–∫–∞ '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–æ–¥' –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("   ‚ùå –ö–Ω–æ–ø–∫–∞ '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–æ–¥' –ù–ï –Ω–∞–π–¥–µ–Ω–∞")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    try:
        response = requests.get(f"{base_url}/admin/database", timeout=10)
        content = response.text
        
        if "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" in content:
            print("   ‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' –Ω–∞–π–¥–µ–Ω")
        else:
            print("   ‚ùå –ó–∞–≥–æ–ª–æ–≤–æ–∫ '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' –ù–ï –Ω–∞–π–¥–µ–Ω")
            
        if "base.html" in content:
            print("   ‚úÖ –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Ç base.html –Ω–∞–π–¥–µ–Ω–æ")
        else:
            print("   ‚ùå –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Ç base.html –ù–ï –Ω–∞–π–¥–µ–Ω–æ")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ —Å—Ç–∞—Ä—ã–π HTML –∏–ª–∏ –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω
        if "<!DOCTYPE html>" in content and "base.html" not in content:
            print("   ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞—Ä—ã–π HTML (–Ω–µ —à–∞–±–ª–æ–Ω)")
        elif "{% extends" in content:
            print("   ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω")
        else:
            print("   ‚ö†Ô∏è –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def check_git_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å git"""
    print("\nüìã –°–¢–ê–¢–£–° GIT")
    print("=" * 20)
    
    import subprocess
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        result = subprocess.run(["git", "status", "--porcelain"], 
                              capture_output=True, text=True, encoding='utf-8')
        if result.returncode == 0:
            if result.stdout.strip():
                print("   ‚ö†Ô∏è –ï—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:")
                print(f"   {result.stdout.strip()}")
            else:
                print("   ‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ git status: {result.stderr}")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç
        result = subprocess.run(["git", "log", "-1", "--oneline"], 
                              capture_output=True, text=True, encoding='utf-8')
        if result.returncode == 0:
            print(f"   üìù –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: {result.stdout.strip()}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ git log: {result.stderr}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def provide_solutions():
    """–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–µ—à–µ–Ω–∏—è"""
    print("\nüîß –†–ï–®–ï–ù–ò–Ø –ü–†–û–ë–õ–ï–ú")
    print("=" * 30)
    
    print("\n‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É–ª–∏—Å—å")
    print("–í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:")
    print("1. Render –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é")
    print("2. –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
    print("3. Render –Ω–µ –æ–±–Ω–æ–≤–∏–ª –∫–æ–¥")
    print("4. –ü—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ–¥–µ–ø–ª–æ–µ–º")
    
    print("\n‚úÖ –†–ï–®–ï–ù–ò–Ø:")
    print("1. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ Render:")
    print("   - Manual Deploy ‚Üí Deploy latest commit")
    print("2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ GitHub")
    print("3. –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞:")
    print("   - Restart service –Ω–∞ Render")
    print("4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–¥–µ–ø–ª–æ—è:")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ autoDeploy –≤–∫–ª—é—á–µ–Ω")

if __name__ == "__main__":
    check_deployed_version()
    check_git_status()
    provide_solutions()
