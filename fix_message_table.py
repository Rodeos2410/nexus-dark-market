#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–æ–±—â–µ–Ω–∏–π
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def recreate_message_table():
    """–ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å–æ–æ–±—â–µ–Ω–∏–π"""
    print("üîß –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    try:
        from app import app, db, Message
        from sqlalchemy import text
        
        with app.app_context():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞
            try:
                message_count = Message.query.count()
                print(f"   üìä –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {message_count}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–∞–±–ª–∏—Ü–µ–π: {e}")
            
            # –£–¥–∞–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            try:
                db.session.execute(text("DROP TABLE IF EXISTS message"))
                db.session.commit()
                print("   üóëÔ∏è –°—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ —É–¥–∞–ª–µ–Ω–∞")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã: {e}")
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
            try:
                db.create_all()
                print("   ‚úÖ –ù–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ
                message_count = Message.query.count()
                print(f"   üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü–µ: {message_count}")
                
                return True
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã: {e}")
                return False
                
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_message_operations():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏...")
    
    try:
        from app import app, db, User, Product, Message
        
        with app.app_context():
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ç–æ–≤–∞—Ä
            user = User.query.first()
            product = Product.query.first()
            
            if not user or not product:
                print("   ‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                return False
            
            print(f"   üë§ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
            print(f"   üì¶ –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä: {product.name}")
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            test_message = Message(
                sender_id=user.id,
                receiver_id=product.seller_id,
                product_id=product.id,
                content="–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏",
                is_read=False
            )
            
            db.session.add(test_message)
            db.session.commit()
            
            print(f"   ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —Å ID: {test_message.id}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
            saved_message = Message.query.get(test_message.id)
            if saved_message:
                print(f"   ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ: {saved_message.content}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏
                sender = User.query.get(saved_message.sender_id)
                receiver = User.query.get(saved_message.receiver_id)
                product_obj = Product.query.get(saved_message.product_id)
                
                print(f"   üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender.username if sender else '–ù–µ –Ω–∞–π–¥–µ–Ω'}")
                print(f"   üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {receiver.username if receiver else '–ù–µ –Ω–∞–π–¥–µ–Ω'}")
                print(f"   üì¶ –¢–æ–≤–∞—Ä: {product_obj.name if product_obj else '–ù–µ –Ω–∞–π–¥–µ–Ω'}")
                
                # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                db.session.delete(saved_message)
                db.session.commit()
                print("   ‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ")
                
                return True
            else:
                print("   ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
                return False
                
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        db.session.rollback()
        return False

def check_message_relationships():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    try:
        from app import app, db, User, Product, Message
        
        with app.app_context():
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            messages = Message.query.all()
            print(f"   üìù –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}")
            
            if len(messages) == 0:
                print("   ‚ÑπÔ∏è –°–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç")
                return True
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            problems = 0
            for message in messages:
                sender = User.query.get(message.sender_id)
                receiver = User.query.get(message.receiver_id)
                product = Product.query.get(message.product_id) if message.product_id else None
                
                if not sender:
                    print(f"   ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ {message.id}: –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å {message.sender_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    problems += 1
                
                if not receiver:
                    print(f"   ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ {message.id}: –ø–æ–ª—É—á–∞—Ç–µ–ª—å {message.receiver_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    problems += 1
                
                if message.product_id and not product:
                    print(f"   ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ {message.id}: —Ç–æ–≤–∞—Ä {message.product_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    problems += 1
            
            if problems == 0:
                print("   ‚úÖ –í—Å–µ —Å–≤—è–∑–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
                return True
            else:
                print(f"   ‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: {problems}")
                return False
                
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤—è–∑–µ–π: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("=" * 50)
    
    # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ...")
    check_message_relationships()
    
    print("\n" + "=" * 50)
    
    # –®–∞–≥ 2: –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    print("2Ô∏è‚É£ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É...")
    recreate_ok = recreate_message_table()
    
    print("\n" + "=" * 50)
    
    # –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏
    print("3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏...")
    test_ok = test_message_operations()
    
    print("\n" + "=" * 50)
    
    # –®–∞–≥ 4: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    print("4Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...")
    final_ok = check_message_relationships()
    
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"   –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã: {'‚úÖ' if recreate_ok else '‚ùå'}")
    print(f"   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π: {'‚úÖ' if test_ok else '‚ùå'}")
    print(f"   –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: {'‚úÖ' if final_ok else '‚ùå'}")
    
    if all([recreate_ok, test_ok, final_ok]):
        print("\nüéâ –¢–∞–±–ª–∏—Ü–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        print("\nüìã –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —á–∞—Ç:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python app.py")
        print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å")
        print("3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Ç–æ–≤–∞—Ä—É –∏ –Ω–∞–∂–º–∏—Ç–µ 'üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü—É'")
        print("4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        return True
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Ç–∞–±–ª–∏—Ü–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
