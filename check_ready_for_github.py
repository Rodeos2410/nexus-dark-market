#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ GitHub
"""

import os
import sys

def check_file_exists(filepath, description):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"""
    if os.path.exists(filepath):
        print(f"‚úÖ {description}: {filepath}")
        return True
    else:
        print(f"‚ùå {description}: {filepath} - –ù–ï –ù–ê–ô–î–ï–ù")
        return False

def check_file_content(filepath, required_content, description):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞"""
    if not os.path.exists(filepath):
        print(f"‚ùå {description}: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        with open(filepath, 'r', encoding='utf-8') as f:
            content = f.read()
        
        if required_content in content:
            print(f"‚úÖ {description}: —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return True
        else:
            print(f"‚ö†Ô∏è {description}: —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–ø–æ–ª–Ω—ã–º")
            return False
    except Exception as e:
        print(f"‚ùå {description}: –æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è - {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é –Ω–∞ GitHub")
    print("=" * 60)
    
    all_ready = True
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    print("\nüìÅ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    files_to_check = [
        ("app.py", "–û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Flask"),
        ("telegram_bot.py", "Telegram –±–æ—Ç —Å –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å—é"),
        ("config.py", "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"),
        ("requirements.txt", "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python"),
        ("Procfile", "–ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ –¥–ª—è Render"),
        ("render.yaml", "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Render"),
        ("runtime.txt", "–í–µ—Ä—Å–∏—è Python"),
    ]
    
    for filepath, description in files_to_check:
        if not check_file_exists(filepath, description):
            all_ready = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫—Ä–∏–ø—Ç—ã
    print("\nüîß –°–∫—Ä–∏–ø—Ç—ã:")
    scripts_to_check = [
        ("init_render.py", "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è Render"),
        ("setup_webhook.py", "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook"),
        ("test_all_components.py", "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"),
        ("test_callback_buttons.py", "–¢–µ—Å—Ç –∫–Ω–æ–ø–æ–∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏"),
        ("test_webhook_callbacks.py", "–¢–µ—Å—Ç webhook —Å callback"),
    ]
    
    for filepath, description in scripts_to_check:
        if not check_file_exists(filepath, description):
            all_ready = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
    print("\nüìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:")
    docs_to_check = [
        ("FINAL_DEPLOYMENT_GUIDE.md", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –¥–µ–ø–ª–æ—é"),
        ("ADMIN_PANEL_BUTTONS_GUIDE.md", "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏"),
        ("GITHUB_REPOSITORY_UPDATE_GUIDE.md", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é GitHub"),
    ]
    
    for filepath, description in docs_to_check:
        if not check_file_exists(filepath, description):
            all_ready = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω—ã
    print("\nüé® –®–∞–±–ª–æ–Ω—ã:")
    templates_dir = "templates"
    if os.path.exists(templates_dir):
        templates = [
            "admin.html",
            "profile.html", 
            "base.html",
            "login.html",
            "register.html",
            "market.html"
        ]
        
        for template in templates:
            template_path = os.path.join(templates_dir, template)
            if not check_file_exists(template_path, f"–®–∞–±–ª–æ–Ω {template}"):
                all_ready = False
    else:
        print("‚ùå –ü–∞–ø–∫–∞ templates –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        all_ready = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    print("\nüé® –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã:")
    static_dir = "static"
    if os.path.exists(static_dir):
        print("‚úÖ –ü–∞–ø–∫–∞ static –Ω–∞–π–¥–µ–Ω–∞")
        
        css_dir = os.path.join(static_dir, "css")
        if os.path.exists(css_dir):
            print("‚úÖ –ü–∞–ø–∫–∞ static/css –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("‚ùå –ü–∞–ø–∫–∞ static/css –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            all_ready = False
    else:
        print("‚ùå –ü–∞–ø–∫–∞ static –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        all_ready = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º app.py –Ω–∞ –Ω–∞–ª–∏—á–∏–µ callback –æ–±—Ä–∞–±–æ—Ç–∫–∏
    if not check_file_content("app.py", "callback_query", "app.py —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É callback"):
        all_ready = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º telegram_bot.py –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫
    if not check_file_content("telegram_bot.py", "inline_keyboard", "telegram_bot.py —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏"):
        all_ready = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º requirements.txt –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if not check_file_content("requirements.txt", "Flask", "requirements.txt —Å–æ–¥–µ—Ä–∂–∏—Ç Flask"):
        all_ready = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Procfile
    if not check_file_content("Procfile", "gunicorn app:app", "Procfile —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É"):
        all_ready = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º render.yaml –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    if not check_file_content("render.yaml", "TELEGRAM_BOT_TOKEN", "render.yaml —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Telegram"):
        all_ready = False
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 60)
    if all_ready:
        print("üéâ –í–°–ï –§–ê–ô–õ–´ –ì–û–¢–û–í–´ –ö –û–ë–ù–û–í–õ–ï–ù–ò–Æ –ù–ê GITHUB!")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python update_github_repo.py")
        print("2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: update_github.bat")
        print("3. –ò–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã Git –≤—Ä—É—á–Ω—É—é")
        print("\nüîó –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print("- –û–±–Ω–æ–≤–∏—Ç–µ –¥–µ–ø–ª–æ–π –Ω–∞ Render")
        print("- –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python setup_webhook.py")
        print("- –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ: python test_all_components.py")
    else:
        print("‚ùå –ù–ï –í–°–ï –§–ê–ô–õ–´ –ì–û–¢–û–í–´")
        print("\nüí° –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–Ω–æ–≤–∞")
        print("   python check_ready_for_github.py")
    
    return all_ready

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
