#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import time

def diagnose_deployment():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø")
    print("=" * 40)
    
    base_url = "https://nexus-dark-market.onrender.com"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞
    print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞...")
    try:
        response = requests.get(base_url, timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            print("   ‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω")
        elif response.status_code == 502:
            print("   ‚ùå –û—à–∏–±–∫–∞ 502 - Bad Gateway (—Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω)")
        elif response.status_code == 503:
            print("   ‚ùå –û—à–∏–±–∫–∞ 503 - Service Unavailable")
        elif response.status_code == 504:
            print("   ‚ùå –û—à–∏–±–∫–∞ 504 - Gateway Timeout")
        else:
            print(f"   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            
    except requests.exceptions.Timeout:
        print("   ‚ùå –¢–∞–π–º–∞—É—Ç - —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
    except requests.exceptions.ConnectionError:
        print("   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è - —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
    routes = [
        ("/", "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"),
        ("/login", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞"),
        ("/admin", "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"),
        ("/admin/database", "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö")
    ]
    
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã...")
    for route, name in routes:
        try:
            response = requests.get(f"{base_url}{route}", timeout=5)
            print(f"   {name}: {response.status_code}")
        except Exception as e:
            print(f"   {name}: –û—à–∏–±–∫–∞ - {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã...")
    try:
        response = requests.get(f"{base_url}/static/css/style.css", timeout=5)
        print(f"   CSS —Ñ–∞–π–ª: {response.status_code}")
    except Exception as e:
        print(f"   CSS —Ñ–∞–π–ª: –û—à–∏–±–∫–∞ - {e}")
    
    print("\nüìã –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –û–®–ò–ë–û–ö –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø:")
    print("1. üóÑÔ∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç DATABASE_URL")
    print("2. üîß –û—à–∏–±–∫–∏ –≤ –∫–æ–¥–µ Python")
    print("3. üì¶ –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏")
    print("4. ‚öôÔ∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")
    print("5. üíæ –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
    
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤ –ø–∞–Ω–µ–ª–∏ Render")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ DATABASE_URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    print("4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–æ–¥ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")

def check_render_logs():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏ Render"""
    print("\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ü–†–û–í–ï–†–ö–ï –õ–û–ì–û–í RENDER:")
    print("=" * 50)
    
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ https://dashboard.render.com")
    print("2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç")
    print("3. –ù–∞–π–¥–∏—Ç–µ —Å–µ—Ä–≤–∏—Å 'nexus-dark-market'")
    print("4. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–∏—Å")
    print("5. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª 'Logs'")
    print("6. –ù–∞–π–¥–∏—Ç–µ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è")
    
    print("\nüîç –ß–¢–û –ò–°–ö–ê–¢–¨ –í –õ–û–ì–ê–•:")
    print("- ‚ùå IndentationError")
    print("- ‚ùå ImportError")
    print("- ‚ùå ModuleNotFoundError")
    print("- ‚ùå Database connection errors")
    print("- ‚ùå Environment variable errors")
    print("- ‚ùå Build failures")

def provide_solutions():
    """–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º"""
    print("\nüîß –†–ï–®–ï–ù–ò–Ø –ü–†–û–ë–õ–ï–ú:")
    print("=" * 30)
    
    print("\nüóÑÔ∏è –ü–†–û–ë–õ–ï–ú–ê: DATABASE_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    print("–†–ï–®–ï–ù–ò–ï:")
    print("1. –°–æ–∑–¥–∞–π—Ç–µ PostgreSQL –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ Render")
    print("2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ Connection String")
    print("3. –î–æ–±–∞–≤—å—Ç–µ DATABASE_URL –≤ Environment Variables")
    print("4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å")
    
    print("\nüîß –ü–†–û–ë–õ–ï–ú–ê: –û—à–∏–±–∫–∏ –≤ –∫–æ–¥–µ")
    print("–†–ï–®–ï–ù–ò–ï:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å Python")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç—Å—Ç—É–ø–æ–≤")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º–ø–æ—Ä—Ç—ã")
    print("4. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
    
    print("\nüì¶ –ü–†–û–ë–õ–ï–ú–ê: –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    print("–†–ï–®–ï–ù–ò–ï:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ requirements.txt")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–∞–∫–µ—Ç—ã —É–∫–∞–∑–∞–Ω—ã")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –≤–µ—Ä—Å–∏–π")
    
    print("\n‚öôÔ∏è –ü–†–û–ë–õ–ï–ú–ê: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")
    print("–†–ï–®–ï–ù–ò–ï:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ Environment Variables")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏–π")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–∏—Å–∞")

if __name__ == "__main__":
    diagnose_deployment()
    check_render_logs()
    provide_solutions()
