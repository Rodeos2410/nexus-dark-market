#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import psycopg2
from psycopg2.extras import RealDictCursor

def connect_to_render_db():
    """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ PostgreSQL –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ Render"""
    
    # –ü–æ–ª—É—á–∏—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ Render Dashboard
    # Database -> Info -> External Database URL
    DATABASE_URL = "postgresql://username:password@hostname:port/database"
    
    print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Render...")
    print("=" * 50)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = psycopg2.connect(DATABASE_URL)
        cursor = conn.cursor(cursor_factory=RealDictCursor)
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–±–ª–∏—Ü–∞—Ö
        print("\nüìã –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
        cursor.execute("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public'
            ORDER BY table_name;
        """)
        
        tables = cursor.fetchall()
        for table in tables:
            print(f"  üìÑ {table['table_name']}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
        cursor.execute("""
            SELECT id, username, email, balance, telegram_username, 
                   telegram_chat_id, is_admin, is_banned, created_at
            FROM "user" 
            ORDER BY id;
        """)
        
        users = cursor.fetchall()
        print(f"–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        print("-" * 80)
        
        for user in users:
            status = "Admin" if user['is_admin'] else ("Banned" if user['is_banned'] else "User")
            telegram_status = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω" if user['telegram_chat_id'] else "‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            
            print(f"ID: {user['id']:3d} | {user['username']:15s} | {user['email']:25s} | "
                  f"{user['balance']:8.2f}‚ÇΩ | {telegram_status:15s} | {status}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã
        print("\nüõçÔ∏è –¢–æ–≤–∞—Ä—ã:")
        cursor.execute("""
            SELECT p.id, p.name, p.price, p.stock, u.username as seller
            FROM product p
            JOIN "user" u ON p.seller_id = u.id
            ORDER BY p.id;
        """)
        
        products = cursor.fetchall()
        print(f"–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
        print("-" * 80)
        
        for product in products:
            stock_info = f"–°–∫–ª–∞–¥: {product['stock']}" if product['stock'] is not None else "–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π"
            print(f"ID: {product['id']:3d} | {product['name']:30s} | "
                  f"{product['price']:8.2f}‚ÇΩ | {stock_info:15s} | –ü—Ä–æ–¥–∞–≤–µ—Ü: {product['seller']}")
        
        cursor.close()
        conn.close()
        
        print("\n‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except psycopg2.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üóÑÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Render")
    print("=" * 50)
    print("üí° –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞:")
    print("1. –ó–∞–π–¥–∏—Ç–µ –≤ Render Dashboard")
    print("2. –ù–∞–π–¥–∏—Ç–µ –≤–∞—à—É PostgreSQL –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
    print("3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ 'External Database URL'")
    print("4. –í—Å—Ç–∞–≤—å—Ç–µ URL –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é DATABASE_URL –≤ —ç—Ç–æ–º —Å–∫—Ä–∏–ø—Ç–µ")
    print("5. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ psycopg2: pip install psycopg2-binary")
    print("6. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ psycopg2
    try:
        import psycopg2
        print("‚úÖ psycopg2 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        connect_to_render_db()
    except ImportError:
        print("‚ùå psycopg2 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install psycopg2-binary")

if __name__ == "__main__":
    main()
