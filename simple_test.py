#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import json
import time

def test_webhook():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç webhook"""
    print("üß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç webhook")
    
    webhook_url = "https://nexus-dark-market.onrender.com/telegram/webhook"
    
    # –¢–µ—Å—Ç 1: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º /start
    print("1. –¢–µ—Å—Ç–∏—Ä—É–µ–º /start...")
    message = {
        "update_id": 1,
        "message": {
            "message_id": 1,
            "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
            "chat": {"id": 1172834372, "type": "private"},
            "date": int(time.time()),
            "text": "/start"
        }
    }
    
    try:
        response = requests.post(webhook_url, json=message, timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            print("   ‚úÖ /start —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    time.sleep(1)
    
    # –¢–µ—Å—Ç 2: –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞
    print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞...")
    callback = {
        "update_id": 2,
        "callback_query": {
            "id": "test_callback",
            "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
            "message": {
                "message_id": 1,
                "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
                "chat": {"id": 1172834372, "type": "private"},
                "date": int(time.time()),
                "text": "/start"
            },
            "data": "change_admin_username"
        }
    }
    
    try:
        response = requests.post(webhook_url, json=callback, timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            print("   ‚úÖ –ö–Ω–æ–ø–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    time.sleep(1)
    
    # –¢–µ—Å—Ç 3: –í–≤–æ–¥–∏–º –Ω–æ–≤—ã–π –ª–æ–≥–∏–Ω
    print("\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –ª–æ–≥–∏–Ω–∞...")
    message = {
        "update_id": 3,
        "message": {
            "message_id": 2,
            "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
            "chat": {"id": 1172834372, "type": "private"},
            "date": int(time.time()),
            "text": "newadmin123"
        }
    }
    
    try:
        response = requests.post(webhook_url, json=message, timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            result = response.json()
            print(f"   –û—Ç–≤–µ—Ç: {result}")
            if result.get('ok'):
                print("   ‚úÖ –õ–æ–≥–∏–Ω –∏–∑–º–µ–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                return True
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ: {result}")
                return False
        else:
            print(f"   ‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ WEBHOOK")
    print("=" * 40)
    
    success = test_webhook()
    
    print("\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢")
    print("=" * 40)
    
    if success:
        print("‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù!")
    else:
        print("‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù!")
