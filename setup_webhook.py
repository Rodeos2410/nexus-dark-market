#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –Ω–∞ Render
"""

import requests
import time

def setup_webhook():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç webhook –¥–ª—è Telegram –±–æ—Ç–∞"""
    
    print("üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Telegram –±–æ—Ç–∞")
    print("=" * 50)
    
    bot_token = "8458514538:AAFIAT7BrKelIHie9-JscBnOlAFd_V2qyMY"
    app_url = "https://nexus-dark-market-1.onrender.com"
    webhook_url = f"{app_url}/telegram/webhook"
    
    print(f"ü§ñ –ë–æ—Ç: @NexusDarkBot")
    print(f"üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {app_url}")
    print(f"üîó Webhook URL: {webhook_url}")
    print()
    
    # –ñ–¥–µ–º, –ø–æ–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    for i in range(30):
        try:
            response = requests.get(app_url, timeout=5)
            if response.status_code in [200, 404]:  # 404 —Ç–æ–∂–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ")
                break
        except:
            pass
        print(f"   –û–∂–∏–¥–∞–Ω–∏–µ... {i+1}/30")
        time.sleep(2)
    else:
        print("‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å –∑–∞ 60 —Å–µ–∫—É–Ω–¥")
        return False
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook
    print("\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ webhook...")
    try:
        url = f"https://api.telegram.org/bot{bot_token}/deleteWebhook"
        response = requests.post(url, timeout=10)
        
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("‚úÖ –°—Ç–∞—Ä—ã–π webhook —É–¥–∞–ª–µ–Ω")
            else:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {result}")
        else:
            print(f"‚ö†Ô∏è HTTP –æ—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {response.status_code}")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: {e}")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
    print("\nüîó –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ webhook...")
    try:
        url = f"https://api.telegram.org/bot{bot_token}/setWebhook"
        payload = {'url': webhook_url}
        
        response = requests.post(url, data=payload, timeout=10)
        
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {result}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook...")
    try:
        url = f"https://api.telegram.org/bot{bot_token}/getWebhookInfo"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            webhook_info = response.json()
            if webhook_info.get('ok'):
                result = webhook_info['result']
                current_url = result.get('url', '')
                pending = result.get('pending_update_count', 0)
                
                print(f"üîó –¢–µ–∫—É—â–∏–π webhook: {current_url}")
                print(f"üìä –û–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {pending}")
                
                if current_url == webhook_url:
                    print("‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
                    return True
                else:
                    print("‚ùå Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
                    return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {webhook_info}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook: {e}")
        return False

def test_admin_panel():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –≤ –±–æ—Ç–µ"""
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –≤ –±–æ—Ç–µ")
    print("-" * 40)
    
    print("üì± –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É @NexusDarkBot –∫–æ–º–∞–Ω–¥—É /start")
    print("üëë –î–æ–ª–∂–Ω—ã –ø–æ—è–≤–∏—Ç—å—Å—è –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏")
    print("‚úÖ –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –ø–æ—è–≤–∏–ª–∏—Å—å - –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –Ω–∞ Render")
    print("=" * 60)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook
    if setup_webhook():
        print("\nüéâ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
        test_admin_panel()
        
        print("\nüìã –ß—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:")
        print("‚úÖ –í–µ–±-—Å–∞–π—Ç: https://nexus-dark-market-1.onrender.com")
        print("‚úÖ Telegram –±–æ—Ç: @NexusDarkBot")
        print("‚úÖ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –≤ –±–æ—Ç–µ")
        print("‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è Telegram")
        
        print("\nüîß –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –∏ –≤–æ–π–¥–∏—Ç–µ –∫–∞–∫ admin/admin123")
        print("2. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É @NexusDarkBot /start")
        print("3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏")
        print("4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
        
        return True
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook")
        print("\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("- –ó–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ Render")
        print("- –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        print("- –î–æ—Å—Ç—É–ø–µ–Ω –ª–∏ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
        
        return False

if __name__ == "__main__":
    success = main()
    exit(0 if success else 1)
