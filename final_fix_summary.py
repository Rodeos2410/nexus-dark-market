#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –æ–± –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö —Å–∏—Å—Ç–µ–º—ã –ø—Ä—è–º–æ–≥–æ –≤–≤–æ–¥–∞
"""

import subprocess
import requests
import json
import time

def run_command(command):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É"""
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True, encoding='utf-8')
        return result.returncode == 0, result.stdout, result.stderr
    except Exception as e:
        return False, "", str(e)

def send_all_changes():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"""
    print("üöÄ –û–¢–ü–†–ê–í–ö–ê –í–°–ï–• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –í –†–ï–ü–û–ó–ò–¢–û–†–ò–ô")
    print("=" * 60)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
    print("üìÅ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤...")
    success, stdout, stderr = run_command("git add .")
    if not success:
        print(f"‚ùå –û—à–∏–±–∫–∞ git add: {stderr}")
        return False
    
    # –ö–æ–º–º–∏—Ç–∏–º
    print("üíæ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞...")
    success, stdout, stderr = run_command('git commit -m "Final fix: add detailed debug logging and improve state management"')
    if not success:
        print(f"‚ùå –û—à–∏–±–∫–∞ git commit: {stderr}")
        return False
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
    print("üåê –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π...")
    success, stdout, stderr = run_command("git push origin main")
    if not success:
        print(f"‚ùå –û—à–∏–±–∫–∞ git push: {stderr}")
        return False
    
    print("‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
    return True

def test_bot():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–æ—Ç–∞"""
    print("\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–û–¢–ê")
    print("=" * 40)
    
    webhook_url = "https://nexus-dark-market.onrender.com/telegram/webhook"
    
    # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
    print("üì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞...")
    
    # 1. /start
    message = {
        "update_id": 1,
        "message": {
            "message_id": 1,
            "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
            "chat": {"id": 1172834372, "type": "private"},
            "date": int(time.time()),
            "text": "/start"
        }
    }
    requests.post(webhook_url, json=message, timeout=5)
    time.sleep(1)
    
    # 2. –ö–Ω–æ–ø–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞
    callback = {
        "update_id": 2,
        "callback_query": {
            "id": "test",
            "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
            "message": {
                "message_id": 1,
                "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
                "chat": {"id": 1172834372, "type": "private"},
                "date": int(time.time()),
                "text": "/start"
            },
            "data": "change_admin_username"
        }
    }
    requests.post(webhook_url, json=callback, timeout=5)
    time.sleep(1)
    
    # 3. –í–≤–æ–¥ –ª–æ–≥–∏–Ω–∞
    message = {
        "update_id": 3,
        "message": {
            "message_id": 2,
            "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
            "chat": {"id": 1172834372, "type": "private"},
            "date": int(time.time()),
            "text": "testuser123"
        }
    }
    response = requests.post(webhook_url, json=message, timeout=5)
    
    print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
    if response.status_code == 200:
        result = response.json()
        print(f"   –û—Ç–≤–µ—Ç: {result}")
        
        if result.get('ok'):
            if 'result' in result and 'text' in result['result']:
                text = result['result']['text']
                print(f"   üì± –°–æ–æ–±—â–µ–Ω–∏–µ: {text}")
                
                if "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞" in text:
                    print("   ‚ùå –û–®–ò–ë–ö–ê –í–°–ï –ï–©–ï –ï–°–¢–¨")
                    return False
                elif "‚úÖ –õ–æ–≥–∏–Ω –∞–¥–º–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω" in text:
                    print("   ‚úÖ –£–°–ü–ï–•!")
                    return True
                else:
                    print("   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç")
                    return False
            else:
                print("   ‚ö†Ô∏è –ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ –≤ –æ—Ç–≤–µ—Ç–µ")
                return False
        else:
            print("   ‚ùå –û—à–∏–±–∫–∞ API")
            return False
    else:
        print("   ‚ùå HTTP –æ—à–∏–±–∫–∞")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéâ –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –û–ë –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø–•")
    print("=" * 70)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if send_all_changes():
        print("\n‚è≥ –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è...")
        time.sleep(30)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º
        success = test_bot()
        
        print("\nüìã –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢")
        print("=" * 70)
        
        print("‚úÖ –ü–†–û–í–ï–î–ï–ù–ù–´–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
        print("   ‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π")
        print("   ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥—Ä–æ–±–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞")
        print("   ‚Ä¢ –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤")
        print("   ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω—ã –ª–æ–≥–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π")
        print("   ‚Ä¢ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–∫—Ä–∏–ø—Ç—ã")
        
        print("\nüîß –§–£–ù–ö–¶–ò–ò –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò:")
        print("   ‚Ä¢ üë§ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ª–æ–≥–∏–Ω–∞ –∞–¥–º–∏–Ω–∞")
        print("   ‚Ä¢ üîí –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∞")
        print("   ‚Ä¢ üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("   ‚Ä¢ ‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("   ‚Ä¢ üëë –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤")
        print("   ‚Ä¢ üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("   ‚Ä¢ üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        print("\nüß™ –°–û–ó–î–ê–ù–ù–´–ï –¢–ï–°–¢–´:")
        print("   ‚Ä¢ test_fix.py - —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        print("   ‚Ä¢ debug_test.py - –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ç–µ—Å—Ç")
        print("   ‚Ä¢ advanced_bot_reader.py - –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ç–µ—Å—Ç")
        print("   ‚Ä¢ smart_auto_fix.py - —É–º–Ω—ã–π –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
        
        print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø: {'‚úÖ –£—Å–ø–µ—Ö' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        
        if success:
            print("\nüéâ –°–ò–°–¢–ï–ú–ê –ü–†–Ø–ú–û–ì–û –í–í–û–î–ê –†–ê–ë–û–¢–ê–ï–¢!")
            print("   –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("\n‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –û–¢–õ–ê–î–ö–ê")
            print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Render")
        
        print("\nüåê –°–°–´–õ–ö–ò:")
        print("   ‚Ä¢ –°–∞–π—Ç: https://nexus-dark-market.onrender.com")
        print("   ‚Ä¢ –ë–æ—Ç: @NexusDarkBot")
        print("   ‚Ä¢ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/Rodeos2410/nexus-dark-market.git")
        
        print("\nüí° –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
        print("   1. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É @NexusDarkBot /start")
        print("   2. –ù–∞–∂–º–∏—Ç–µ '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∞'")
        print("   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å")
        print("   4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
        
    else:
        print("\n‚ùå –ù–ï –£–î–ê–õ–û–°–¨ –û–¢–ü–†–ê–í–ò–¢–¨ –ò–ó–ú–ï–ù–ï–ù–ò–Ø –í –†–ï–ü–û–ó–ò–¢–û–†–ò–ô")

if __name__ == "__main__":
    main()
