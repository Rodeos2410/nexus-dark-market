import requests
import json
import os
import time
from app import app, db, User, Product, CartItem
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', '8458514538:AAFIAT7BrKelIHie9-JscBnOlAFd_V2qyMY')
ADMIN_CHAT_ID = os.getenv('ADMIN_CHAT_ID', '1172834372')
BASE_URL = 'https://api.telegram.org/bot'

# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö (–≤—Ä–µ–º–µ–Ω–Ω–æ –≤ –ø–∞–º—è—Ç–∏)
user_states = {}

def get_user_state(chat_id):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    return user_states.get(str(chat_id))

def set_user_state(chat_id, state):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_states[str(chat_id)] = state
    print(f"üîç –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ {state} –¥–ª—è chat_id: {chat_id}")
    print(f"üîç –í—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è: {user_states}")

def clear_user_state(chat_id):
    """–û—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if str(chat_id) in user_states:
        del user_states[str(chat_id)]
        print(f"üîç –û—á–∏—â–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è chat_id: {chat_id}")
        print(f"üîç –û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏—è: {user_states}")

def create_inline_keyboard(buttons):
    """–°–æ–∑–¥–∞–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
    keyboard = []
    for row in buttons:
        keyboard_row = []
        for button in row:
            keyboard_row.append({
                'text': button['text'],
                'callback_data': button['callback_data']
            })
        keyboard.append(keyboard_row)
    return {'inline_keyboard': keyboard}

def send_telegram_message(text, chat_id, keyboard=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    try:
        url = f"{BASE_URL}{TELEGRAM_BOT_TOKEN}/sendMessage"
        payload = {
            'chat_id': chat_id,
            'text': text,
            'parse_mode': 'HTML'
        }
        
        if keyboard:
            payload['reply_markup'] = json.dumps(keyboard)
        
        response = requests.post(url, data=payload, timeout=5)
        return response.json()
    except Exception as e:
        print(f"Telegram send error: {e}")
        return None

def edit_telegram_message(text, chat_id, message_id, keyboard=None):
    """–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
    try:
        url = f"{BASE_URL}{TELEGRAM_BOT_TOKEN}/editMessageText"
        payload = {
            'chat_id': chat_id,
            'message_id': message_id,
            'text': text,
            'parse_mode': 'HTML'
        }
        
        if keyboard:
            payload['reply_markup'] = json.dumps(keyboard)
        
        response = requests.post(url, data=payload, timeout=5)
        return response.json()
    except Exception as e:
        print(f"Telegram edit error: {e}")
        return None

def answer_callback_query(callback_query_id, text=None):
    """–û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ callback query"""
    try:
        url = f"{BASE_URL}{TELEGRAM_BOT_TOKEN}/answerCallbackQuery"
        payload = {
            'callback_query_id': callback_query_id
        }
        
        if text:
            payload['text'] = text
        
        response = requests.post(url, data=payload, timeout=5)
        return response.json()
    except Exception as e:
        print(f"Telegram callback answer error: {e}")
        return None

def get_user_stats():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    with app.app_context():
        total_users = User.query.count()
        admins = User.query.filter_by(is_admin=True).count()
        banned = User.query.filter_by(is_banned=True).count()
        active = total_users - banned
        total_products = Product.query.count()
        
        return {
            'total_users': total_users,
            'admins': admins,
            'banned': banned,
            'active': active,
            'total_products': total_products
        }

def get_user_list():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    with app.app_context():
        users = User.query.all()
        user_list = []
        
        for user in users:
            status = []
            if user.is_admin:
                status.append("üëë –ê–¥–º–∏–Ω")
            if user.is_banned:
                status.append("üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
            if not user.is_banned:
                status.append("‚úÖ –ê–∫—Ç–∏–≤–µ–Ω")
            
            telegram_status = "üì± –ù–∞—Å—Ç—Ä–æ–µ–Ω" if user.telegram_chat_id else "‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            
            user_list.append({
                'id': user.id,
                'username': user.username,
                'email': user.email,
                'balance': user.balance,
                'status': " | ".join(status),
                'telegram': f"@{user.telegram_username}" if user.telegram_username else "–ù–µ —É–∫–∞–∑–∞–Ω",
                'telegram_status': telegram_status,
                'created_at': user.created_at.strftime('%d.%m.%Y')
            })
        
        return user_list

def get_user_by_username(username):
    """–ù–∞—Ö–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏"""
    with app.app_context():
        user = User.query.filter_by(username=username).first()
        return user

def get_user_management_buttons():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —Å –∏–º–µ–Ω–∞–º–∏"""
    with app.app_context():
        users = User.query.limit(10).all()  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã—Ö 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        buttons = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for user in users:
            status_icon = "üëë" if user.is_admin else "üö´" if user.is_banned else "‚úÖ"
            username = user.username[:15] + "..." if len(user.username) > 15 else user.username
            
            buttons.append([
                {
                    'text': f"{status_icon} {username}",
                    'callback_data': f"user_info_{user.id}"
                }
            ])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        buttons.append([
            {'text': 'üîç –ù–∞–π—Ç–∏ –ø–æ –∏–º–µ–Ω–∏', 'callback_data': 'find_user'},
            {'text': 'üìù –í–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É', 'callback_data': 'enter_command'}
        ])
        
        buttons.append([
            {'text': 'üîô –ù–∞–∑–∞–¥', 'callback_data': 'main_menu'}
        ])
        
        return create_inline_keyboard(buttons)

def ban_user(user_id):
    """–ë–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    with app.app_context():
        user = User.query.get(user_id)
        if user:
            user.is_banned = True
            db.session.commit()
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"


def unban_user(user_id):
    """–†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    with app.app_context():
        user = User.query.get(user_id)
        if user:
            user.is_banned = False
            db.session.commit()
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"

def unban_user_by_username(username):
    """–†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏"""
    with app.app_context():
        user = get_user_by_username(username)
        if user:
            user.is_banned = False
            db.session.commit()
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
        return f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω"

def make_admin(user_id):
    """–î–µ–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–æ–º"""
    with app.app_context():
        user = User.query.get(user_id)
        if user:
            user.is_admin = True
            db.session.commit()
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–æ–º"
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"

def make_admin_by_username(username):
    """–î–µ–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–æ–º –ø–æ –∏–º–µ–Ω–∏"""
    with app.app_context():
        user = get_user_by_username(username)
        if user:
            user.is_admin = True
            db.session.commit()
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–æ–º"
        return f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω"

def remove_admin(user_id):
    """–£–±–∏—Ä–∞–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞"""
    with app.app_context():
        user = User.query.get(user_id)
        if user:
            user.is_admin = False
            db.session.commit()
            return f"‚úÖ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} —É–±—Ä–∞–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞"
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"

def remove_admin_by_username(username):
    """–£–±–∏—Ä–∞–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞ –ø–æ –∏–º–µ–Ω–∏"""
    with app.app_context():
        user = get_user_by_username(username)
        if user:
            user.is_admin = False
            db.session.commit()
            return f"‚úÖ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} —É–±—Ä–∞–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞"
        return f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω"

def setup_telegram_chat(user_id, chat_id):
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç Telegram chat_id –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    with app.app_context():
        user = User.query.get(user_id)
        if user:
            user.telegram_chat_id = chat_id
            db.session.commit()
            return f"‚úÖ Telegram –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username}"
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"

def delete_user_admin(user_id):
    """–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    with app.app_context():
        user = User.query.get(user_id)
        if user:
            username = user.username
            
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            products = Product.query.filter_by(seller_id=user.id).all()
            for product in products:
                db.session.delete(product)
            
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            cart_items = CartItem.query.filter_by(user_id=user.id).all()
            for item in cart_items:
                db.session.delete(item)
            
            # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            db.session.delete(user)
            db.session.commit()
            
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É–¥–∞–ª–µ–Ω (—Ç–æ–≤–∞—Ä–æ–≤: {len(products)})"
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"

def change_admin_username(new_username):
    """–ò–∑–º–µ–Ω—è–µ—Ç –ª–æ–≥–∏–Ω –∞–¥–º–∏–Ω–∞"""
    with app.app_context():
        # –ù–∞—Ö–æ–¥–∏–º –∞–¥–º–∏–Ω–∞ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID 1 –∏–ª–∏ –ø–µ—Ä–≤—ã–π –∞–¥–º–∏–Ω)
        admin = User.query.filter_by(is_admin=True).first()
        if admin:
            old_username = admin.username
            admin.username = new_username
            db.session.commit()
            return f"‚úÖ –õ–æ–≥–∏–Ω –∞–¥–º–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω —Å '{old_username}' –Ω–∞ '{new_username}'"
        return "‚ùå –ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω"

def change_admin_password(new_password):
    """–ò–∑–º–µ–Ω—è–µ—Ç –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞"""
    with app.app_context():
        from werkzeug.security import generate_password_hash
        
        # –ù–∞—Ö–æ–¥–∏–º –∞–¥–º–∏–Ω–∞
        admin = User.query.filter_by(is_admin=True).first()
        if admin:
            admin.password_hash = generate_password_hash(new_password)
            db.session.commit()
            return f"‚úÖ –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω"
        return "‚ùå –ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω"

def ban_user_by_username(username):
    """–ë–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏"""
    with app.app_context():
        user = User.query.filter_by(username=username).first()
        if user:
            user.is_banned = True
            db.session.commit()
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
        else:
            return f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω"

def unban_user_by_username(username):
    """–†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏"""
    with app.app_context():
        user = User.query.filter_by(username=username).first()
        if user:
            user.is_banned = False
            db.session.commit()
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
        else:
            return f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω"

def make_admin_by_username(username):
    """–î–µ–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–æ–º –ø–æ –∏–º–µ–Ω–∏"""
    with app.app_context():
        user = User.query.filter_by(username=username).first()
        if user:
            user.is_admin = True
            db.session.commit()
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–æ–º"
        else:
            return f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω"

def remove_admin_by_username(username):
    """–£–±–∏—Ä–∞–µ—Ç –∞–¥–º–∏–Ω–∞ –ø–æ –∏–º–µ–Ω–∏"""
    with app.app_context():
        user = User.query.filter_by(username=username).first()
        if user:
            user.is_admin = False
            db.session.commit()
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –±–æ–ª—å—à–µ –Ω–µ –∞–¥–º–∏–Ω"
        else:
            return f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω"

def delete_user_by_username(username):
    """–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏"""
    with app.app_context():
        user = User.query.filter_by(username=username).first()
        if user:
            db.session.delete(user)
            db.session.commit()
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' —É–¥–∞–ª–µ–Ω"
        else:
            return f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω"

def find_user_by_username(username):
    """–ù–∞—Ö–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏"""
    with app.app_context():
        user = User.query.filter_by(username=username).first()
        if user:
            status = []
            if user.is_admin:
                status.append("üëë –ê–¥–º–∏–Ω")
            if user.is_banned:
                status.append("üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
            if not status:
                status.append("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
            
            telegram_status = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω" if user.telegram_chat_id else "‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            
            text = f"""üîç <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</b>

<b>ID:</b> {user.id}
<b>–ò–º—è:</b> {user.username}
<b>Email:</b> {user.email}
<b>Telegram:</b> {f'@{user.telegram_username}' if user.telegram_username else '–ù–µ —É–∫–∞–∑–∞–Ω'} ({telegram_status})
<b>–°—Ç–∞—Ç—É—Å:</b> {" | ".join(status)}
<b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:</b> {user.created_at.strftime('%d.%m.%Y %H:%M')}

<b>üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏–º—è:</b> <code>{user.username}</code>"""
            return text
        else:
            return f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω"

def get_admin_info():
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–¥–º–∏–Ω–µ"""
    with app.app_context():
        admin = User.query.filter_by(is_admin=True).first()
        if admin:
            return {
                'username': admin.username,
                'email': admin.email,
                'created_at': admin.created_at.strftime('%d.%m.%Y %H:%M'),
                'telegram_chat_id': admin.telegram_chat_id,
                'is_banned': admin.is_banned
            }
        return None


def get_main_menu():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
    buttons = [
        [
            {'text': 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'callback_data': 'stats'},
            {'text': 'üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', 'callback_data': 'users'}
        ],
        [
            {'text': 'üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', 'callback_data': 'management'},
            {'text': 'üì± Telegram', 'callback_data': 'telegram'}
        ],
        [
            {'text': '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∞', 'callback_data': 'admin_settings'}
        ],
        [
            {'text': '‚ùì –ü–æ–º–æ—â—å', 'callback_data': 'help'}
        ]
    ]
    return create_inline_keyboard(buttons)

def get_management_menu():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    buttons = [
        [
            {'text': 'üë• –í—ã–±—Ä–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'callback_data': 'select_user'},
            {'text': 'üîç –ù–∞–π—Ç–∏ –ø–æ –∏–º–µ–Ω–∏', 'callback_data': 'find_user'}
        ],
        [
            {'text': 'üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', 'callback_data': 'ban_user'},
            {'text': '‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', 'callback_data': 'unban_user'}
        ],
        [
            {'text': 'üëë –°–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–æ–º', 'callback_data': 'make_admin'},
            {'text': 'üë§ –£–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∞', 'callback_data': 'remove_admin'}
        ],
        [
            {'text': 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'callback_data': 'delete_user'}
        ],
        [
            {'text': 'üîô –ù–∞–∑–∞–¥', 'callback_data': 'main_menu'}
        ]
    ]
    return create_inline_keyboard(buttons)

def get_user_actions_menu(user_id):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    with app.app_context():
        user = User.query.get(user_id)
        if not user:
            return None
        
        buttons = [
            [
                {'text': f'üë§ {user.username}', 'callback_data': f'user_info_{user_id}'}
            ],
            [
                {'text': 'üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', 'callback_data': f'ban_user_{user_id}'},
                {'text': '‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', 'callback_data': f'unban_user_{user_id}'}
            ],
            [
                {'text': 'üëë –°–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–æ–º', 'callback_data': f'make_admin_{user_id}'},
                {'text': 'üë§ –£–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∞', 'callback_data': f'remove_admin_{user_id}'}
            ],
            [
                {'text': 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å', 'callback_data': f'delete_user_{user_id}'}
            ],
            [
                {'text': 'üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É', 'callback_data': 'management'}
            ]
        ]
        return create_inline_keyboard(buttons)

def get_telegram_menu():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram"""
    buttons = [
        [
            {'text': 'üì± –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Telegram', 'callback_data': 'setup_telegram'}
        ],
        [
            {'text': 'üîô –ù–∞–∑–∞–¥', 'callback_data': 'main_menu'}
        ]
    ]
    return create_inline_keyboard(buttons)

def get_admin_settings_menu():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–¥–º–∏–Ω–∞"""
    buttons = [
        [
            {'text': 'üë§ –ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω', 'callback_data': 'change_admin_username'},
            {'text': 'üîí –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å', 'callback_data': 'change_admin_password'}
        ],
        [
            {'text': '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–¥–º–∏–Ω–µ', 'callback_data': 'admin_info'}
        ],
        [
            {'text': 'üîô –ù–∞–∑–∞–¥', 'callback_data': 'main_menu'}
        ]
    ]
    return create_inline_keyboard(buttons)

def handle_admin_command(message_text, chat_id):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã"""
    if chat_id != ADMIN_CHAT_ID:
        return "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", None
    
    # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /, –¥–æ–±–∞–≤–ª—è–µ–º /
    if not message_text.startswith('/'):
        message_text = '/' + message_text
    
    parts = message_text.split()
    command = parts[0].lower()
    
    if command == '/start' or command == '/menu':
        return "üîß <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", get_main_menu()
    
    elif command == '/stats':
        stats = get_user_stats()
        text = f"""üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</b>

üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:
‚Ä¢ –í—Å–µ–≥–æ: {stats['total_users']}
‚Ä¢ –ê–¥–º–∏–Ω–æ–≤: {stats['admins']}
‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {stats['banned']}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {stats['active']}

üì¶ –¢–æ–≤–∞—Ä—ã: {stats['total_products']}"""
        return text, get_main_menu()

    elif command == '/users':
        users = get_user_list()
        if not users:
            return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", get_main_menu()
        
        text = "üë• <b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
        for user in users[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 10
            text += f"<b>{user['username']}</b> (ID: {user['id']})\n"
            text += f"üìß {user['email']}\n"
            text += f"üí∞ –ë–∞–ª–∞–Ω—Å: {user['balance']}‚ÇΩ\n"
            text += f"üì± Telegram: {user['telegram']} ({user['telegram_status']})\n"
            text += f"üìÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {user['created_at']}\n"
            text += f"üîπ {user['status']}\n\n"
        
        if len(users) > 10:
            text += f"... –∏ –µ—â–µ {len(users) - 10} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        
        return text, get_main_menu()

    elif command == '/ban' and len(parts) > 1:
        try:
            user_id = int(parts[1])
            return ban_user(user_id), get_main_menu()
        except ValueError:
            return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", get_main_menu()

    elif command == '/unban' and len(parts) > 1:
        try:
            user_id = int(parts[1])
            return unban_user(user_id), get_main_menu()
        except ValueError:
            return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", get_main_menu()

    elif command == '/admin' and len(parts) > 1:
        try:
            user_id = int(parts[1])
            return make_admin(user_id), get_main_menu()
        except ValueError:
            return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", get_main_menu()

    elif command == '/remove_admin' and len(parts) > 1:
        try:
            user_id = int(parts[1])
            return remove_admin(user_id), get_main_menu()
        except ValueError:
            return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", get_main_menu()

    elif command == '/setup_telegram' and len(parts) > 2:
        try:
            user_id = int(parts[1])
            chat_id = parts[2]
            return setup_telegram_chat(user_id, chat_id), get_main_menu()
        except ValueError:
            return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã", get_main_menu()

    elif command == '/delete' and len(parts) > 1:
        try:
            user_id = int(parts[1])
            return delete_user_admin(user_id), get_main_menu()
        except ValueError:
            return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", get_main_menu()

    elif command == '/help':
        text = """üîß <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</b>

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –º–µ–Ω—é.

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã

üë• <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b>
–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

üîß <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b>
‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
‚Ä¢ –ù–∞–∑–Ω–∞—á–∏—Ç—å/—É–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞
‚Ä¢ –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

üì± <b>Telegram:</b>
–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

‚ùì <b>–ü–æ–º–æ—â—å:</b>
–ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"""
        return text, get_main_menu()

    else:
        return "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é", get_main_menu()

def handle_callback_query(callback_query, chat_id):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
    if chat_id != ADMIN_CHAT_ID:
        return "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", None
    
    callback_data = callback_query['data']
    message_id = callback_query['message']['message_id']
    
    if callback_data == 'main_menu':
        return "üîß <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", get_main_menu()
    
    elif callback_data == 'stats':
        stats = get_user_stats()
        text = f"""üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</b>

üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:
‚Ä¢ –í—Å–µ–≥–æ: {stats['total_users']}
‚Ä¢ –ê–¥–º–∏–Ω–æ–≤: {stats['admins']}
‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {stats['banned']}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {stats['active']}

üì¶ –¢–æ–≤–∞—Ä—ã: {stats['total_products']}"""
        return text, get_main_menu()
    
    elif callback_data == 'users':
        users = get_user_list()
        if not users:
            return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", get_main_menu()
        
        text = "üë• <b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
        for user in users[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 10
            text += f"<b>{user['username']}</b> (ID: {user['id']})\n"
            text += f"üìß {user['email']}\n"
            text += f"üí∞ –ë–∞–ª–∞–Ω—Å: {user['balance']}‚ÇΩ\n"
            text += f"üì± Telegram: {user['telegram']} ({user['telegram_status']})\n"
            text += f"üìÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {user['created_at']}\n"
            text += f"üîπ {user['status']}\n\n"
        
        if len(users) > 10:
            text += f"... –∏ –µ—â–µ {len(users) - 10} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        
        return text, get_main_menu()
    
    elif callback_data == 'management':
        return "üîß <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", get_management_menu()
    
    elif callback_data == 'ban_user':
        user_states[str(chat_id)] = 'waiting_ban_username'
        return "üö´ <b>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", get_management_menu()
    
    elif callback_data == 'unban_user':
        user_states[str(chat_id)] = 'waiting_unban_username'
        return "‚úÖ <b>–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", get_management_menu()
    
    elif callback_data == 'make_admin':
        user_states[str(chat_id)] = 'waiting_make_admin_username'
        return "üëë <b>–°–¥–µ–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–æ–º</b>\n\n–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", get_management_menu()
    
    elif callback_data == 'remove_admin':
        user_states[str(chat_id)] = 'waiting_remove_admin_username'
        return "üë§ <b>–£–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∞</b>\n\n–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", get_management_menu()
    
    elif callback_data == 'delete_user':
        user_states[str(chat_id)] = 'waiting_delete_username'
        return "üóëÔ∏è <b>–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", get_management_menu()
    
    elif callback_data == 'find_user':
        user_states[str(chat_id)] = 'waiting_find_username'
        return "üîç <b>–ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", get_management_menu()
    
    elif callback_data == 'select_user':
        return "üë• <b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:", get_user_management_buttons()
    
    elif callback_data == 'find_user':
        return "üîç <b>–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞:\n\n<code>find username</code>\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: <code>find admin</code>", get_management_menu()
    
    elif callback_data == 'enter_command':
        return "üìù <b>–í–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã</b>\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n<code>ban username</code> - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å\n<code>unban username</code> - —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å\n<code>admin username</code> - —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–æ–º\n<code>remove_admin username</code> - —É–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∞\n<code>delete username</code> - —É–¥–∞–ª–∏—Ç—å\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: <code>ban testuser</code>", get_management_menu()
    
    elif callback_data.startswith('user_info_'):
        user_id = int(callback_data.split('_')[2])
        with app.app_context():
            user = User.query.get(user_id)
            if user:
                status = []
                if user.is_admin:
                    status.append("üëë –ê–¥–º–∏–Ω")
                if user.is_banned:
                    status.append("üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
                if not user.is_banned:
                    status.append("‚úÖ –ê–∫—Ç–∏–≤–µ–Ω")
                
                telegram_status = "üì± –ù–∞—Å—Ç—Ä–æ–µ–Ω" if user.telegram_chat_id else "‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
                
                text = f"""üë§ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</b>

<b>–ò–º—è:</b> {user.username}
<b>Email:</b> {user.email}
<b>ID:</b> {user.id}
<b>–ë–∞–ª–∞–Ω—Å:</b> {user.balance}‚ÇΩ
<b>Telegram:</b> {f'@{user.telegram_username}' if user.telegram_username else '–ù–µ —É–∫–∞–∑–∞–Ω'} ({telegram_status})
<b>–°—Ç–∞—Ç—É—Å:</b> {" | ".join(status)}
<b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:</b> {user.created_at.strftime('%d.%m.%Y %H:%M')}

<b>üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏–º—è:</b> <code>{user.username}</code>"""
                
                return text, get_user_actions_menu(user_id)
            else:
                return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", get_management_menu()
    
    elif callback_data.startswith('ban_user_'):
        user_id = int(callback_data.split('_')[2])
        result = ban_user(user_id)
        return result, get_management_menu()
    
    elif callback_data.startswith('unban_user_'):
        user_id = int(callback_data.split('_')[2])
        result = unban_user(user_id)
        return result, get_management_menu()
    
    elif callback_data.startswith('make_admin_'):
        user_id = int(callback_data.split('_')[2])
        result = make_admin(user_id)
        return result, get_management_menu()
    
    elif callback_data.startswith('remove_admin_'):
        user_id = int(callback_data.split('_')[2])
        result = remove_admin(user_id)
        return result, get_management_menu()
    
    elif callback_data.startswith('delete_user_'):
        user_id = int(callback_data.split('_')[2])
        result = delete_user_admin(user_id)
        return result, get_management_menu()
    
    elif callback_data == 'telegram':
        return "üì± <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", get_telegram_menu()
    
    elif callback_data == 'admin_settings':
        return "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∞</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", get_admin_settings_menu()
    
    elif callback_data == 'change_admin_username':
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞
        set_user_state(chat_id, 'waiting_username')
        text = "üë§ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ª–æ–≥–∏–Ω–∞ –∞–¥–º–∏–Ω–∞</b>\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ª–æ–≥–∏–Ω:"
        print(f"üîç Callback –æ–±—Ä–∞–±–æ—Ç–∞–Ω, —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {get_user_state(chat_id)}")
        return text, get_admin_settings_menu()
    
    elif callback_data == 'change_admin_password':
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è
        user_states[str(chat_id)] = 'waiting_password'
        text = "üîí <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∞</b>\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:"
        return text, get_admin_settings_menu()
    
    elif callback_data == 'admin_info':
        admin_info = get_admin_info()
        if admin_info:
            text = f"""‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–¥–º–∏–Ω–µ</b>

<b>–õ–æ–≥–∏–Ω:</b> {admin_info['username']}
<b>Email:</b> {admin_info['email']}
<b>Telegram Chat ID:</b> {admin_info['telegram_chat_id'] or '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}
<b>–°—Ç–∞—Ç—É—Å:</b> {'üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' if admin_info['is_banned'] else '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω'}
<b>–°–æ–∑–¥–∞–Ω:</b> {admin_info['created_at']}

<b>üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ª–æ–≥–∏–Ω:</b> <code>{admin_info['username']}</code>"""
            return text, get_admin_settings_menu()
        else:
            return "‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–¥–º–∏–Ω–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", get_admin_settings_menu()
    
    elif callback_data == 'help':
        text = """üîß <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</b>

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –º–µ–Ω—é.

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã

üë• <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b>
–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

üîß <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b>
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞
‚Ä¢ –ù–∞–π–¥–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏

üì± <b>Telegram:</b>
–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∞:</b>
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ª–æ–≥–∏–Ω–∞ –∞–¥–º–∏–Ω–∞ (–≤–≤–æ–¥ –≤—Ä—É—á–Ω—É—é)
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∞ (–≤–≤–æ–¥ –≤—Ä—É—á–Ω—É—é)
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–¥–º–∏–Ω–µ

üîß <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:</b>
‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
‚Ä¢ –ù–∞–∑–Ω–∞—á–∏—Ç—å/—É–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∞
‚Ä¢ –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

‚ùì <b>–ü–æ–º–æ—â—å:</b>
–ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

<b>üí° –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏!</b>
–ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ."""
        return text, get_main_menu()
    
    else:
        return "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ", get_main_menu()

def process_telegram_update(update):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram"""
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ callback_query (–Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏)
    if 'callback_query' in update:
        callback_query = update['callback_query']
        chat_id = str(callback_query['message']['chat']['id'])
        message_id = callback_query['message']['message_id']
        
        text, keyboard = handle_callback_query(callback_query, chat_id)
        
        # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
        answer_callback_query(callback_query['id'])
        
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        edit_telegram_message(text, chat_id, message_id, keyboard)
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    if 'message' not in update:
        return
    
    message = update['message']
    chat_id = str(message['chat']['id'])
    text = message.get('text', '')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    state = get_user_state(chat_id)
    print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è chat_id: {chat_id}, —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {state}")
    
    if state:
        if state == 'waiting_username':
            print(f"üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –ª–æ–≥–∏–Ω–∞: {text}")
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –ª–æ–≥–∏–Ω–∞
            result = change_admin_username(text)
            response_text = f"{result}\n\n<b>üí° –ù–æ–≤—ã–π –ª–æ–≥–∏–Ω:</b> <code>{text}</code>\n\n<b>‚ö†Ô∏è –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ª–æ–≥–∏–Ω!</b>"
            print(f"üîç –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ: {response_text}")
            clear_user_state(chat_id)  # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            response = send_telegram_message(response_text, chat_id, get_main_menu())
            print(f"üîç –û—Ç–≤–µ—Ç –æ—Ç send_telegram_message: {response}")
            return
            
        elif state == 'waiting_password':
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è
            result = change_admin_password(text)
            response_text = f"{result}\n\n<b>üí° –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:</b> <code>{text}</code>\n\n<b>‚ö†Ô∏è –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å!</b>"
            clear_user_state(chat_id)  # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            send_telegram_message(response_text, chat_id, get_main_menu())
            return
            
        elif state == 'waiting_ban_username':
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            result = ban_user_by_username(text)
            clear_user_state(chat_id)  # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            send_telegram_message(result, chat_id, get_main_menu())
            return
            
        elif state == 'waiting_unban_username':
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            result = unban_user_by_username(text)
            clear_user_state(chat_id)  # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            send_telegram_message(result, chat_id, get_main_menu())
            return
            
        elif state == 'waiting_make_admin_username':
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
            result = make_admin_by_username(text)
            clear_user_state(chat_id)  # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            send_telegram_message(result, chat_id, get_main_menu())
            return
            
        elif state == 'waiting_remove_admin_username':
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–Ω—è—Ç–∏–µ –∞–¥–º–∏–Ω–∞
            result = remove_admin_by_username(text)
            clear_user_state(chat_id)  # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            send_telegram_message(result, chat_id, get_main_menu())
            return
            
        elif state == 'waiting_delete_username':
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            result = delete_user_by_username(text)
            clear_user_state(chat_id)  # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            send_telegram_message(result, chat_id, get_main_menu())
            return
            
        elif state == 'waiting_find_username':
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            result = find_user_by_username(text)
            clear_user_state(chat_id)  # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            send_telegram_message(result, chat_id, get_main_menu())
            return
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    if text.startswith('/') or text in ['start', 'menu', 'help']:
        response_text, keyboard = handle_admin_command(text, chat_id)
        send_telegram_message(response_text, chat_id, keyboard)
    elif chat_id == ADMIN_CHAT_ID:
        # –ï—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω –∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        print(f"üîç –ê–¥–º–∏–Ω –±–µ–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        send_telegram_message("üîß <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", chat_id, get_main_menu())
    else:
        # –î–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        send_telegram_message("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é", chat_id)

if __name__ == "__main__":
    print("ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    print("üì± –ê–¥–º–∏–Ω chat_id:", ADMIN_CHAT_ID)
    print("üîß –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏")
    print("üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram")

