#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import json

def detailed_deployment_check():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"""
    print("üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø")
    print("=" * 50)
    
    base_url = "https://nexus-dark-market.onrender.com"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...")
    try:
        response = requests.get(base_url, timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.text)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        if "Nexus Dark" in response.text:
            print("   ‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        else:
            print("   ‚ö†Ô∏è –ö–æ–Ω—Ç–µ–Ω—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–ø–æ–ª–Ω—ã–º")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞...")
    try:
        response = requests.get(f"{base_url}/login", timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if "–í—Ö–æ–¥" in response.text:
            print("   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("   ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Ö–æ–¥–∞")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
    print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å...")
    try:
        response = requests.get(f"{base_url}/admin", timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            if "–ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö" in response.text:
                print("   ‚úÖ –ö–Ω–æ–ø–∫–∞ '–ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö' –Ω–∞–π–¥–µ–Ω–∞")
            else:
                print("   ‚ùå –ö–Ω–æ–ø–∫–∞ '–ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
            if "–ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å" in response.text:
                print("   ‚úÖ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            else:
                print("   ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏")
        else:
            print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    try:
        response = requests.get(f"{base_url}/admin/database", timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            if "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" in response.text:
                print("   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç")
            else:
                print("   ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        elif response.status_code == 302:
            print("   ‚ö†Ô∏è –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (–Ω—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è)")
        else:
            print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    print("\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã...")
    static_files = [
        "/static/css/style.css",
        "/static/uploads/1758649290_2256.jpg"
    ]
    
    for file_path in static_files:
        try:
            response = requests.get(f"{base_url}{file_path}", timeout=5)
            print(f"   {file_path}: {response.status_code}")
        except Exception as e:
            print(f"   {file_path}: –û—à–∏–±–∫–∞ - {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞
    print("\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞...")
    try:
        import time
        start_time = time.time()
        response = requests.get(base_url, timeout=10)
        end_time = time.time()
        response_time = end_time - start_time
        print(f"   –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {response_time:.2f} —Å–µ–∫—É–Ω–¥")
        
        if response_time < 2:
            print("   ‚úÖ –ë—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç")
        elif response_time < 5:
            print("   ‚ö†Ô∏è –ú–µ–¥–ª–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç")
        else:
            print("   ‚ùå –û—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def check_specific_features():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"""
    print("\nüéØ –ü–†–û–í–ï–†–ö–ê –ö–û–ù–ö–†–ï–¢–ù–´–• –§–£–ù–ö–¶–ò–ô")
    print("=" * 40)
    
    base_url = "https://nexus-dark-market.onrender.com"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
    print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...")
    try:
        response = requests.get(f"{base_url}/login", timeout=10)
        if "auth_code" in response.text:
            print("   ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–Ω–∞")
        else:
            print("   ‚ùå –î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é...")
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
        response = requests.get(f"{base_url}/telegram/webhook", timeout=5)
        print(f"   Telegram webhook: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def provide_deployment_status():
    """–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"""
    print("\nüìä –°–¢–ê–¢–£–° –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø")
    print("=" * 30)
    
    print("‚úÖ –†–ê–ë–û–¢–ê–ï–¢:")
    print("   ‚Ä¢ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω")
    print("   ‚Ä¢ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –æ—Ç–≤–µ—á–∞—é—Ç")
    print("   ‚Ä¢ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è")
    print("   ‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞")
    
    print("\nüîç –ù–£–ñ–ù–û –ü–†–û–í–ï–†–ò–¢–¨:")
    print("   ‚Ä¢ –ö–Ω–æ–ø–∫–∞ '–ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö'")
    print("   ‚Ä¢ –î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è")
    print("   ‚Ä¢ Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è")
    print("   ‚Ä¢ –§—É–Ω–∫—Ü–∏–∏ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏")
    
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("1. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ –∞–¥–º–∏–Ω")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π")
    print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram –±–æ—Ç–∞")

if __name__ == "__main__":
    detailed_deployment_check()
    check_specific_features()
    provide_deployment_status()
