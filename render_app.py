#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
import threading
import time
import requests
import json
from datetime import datetime

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
from app import app, db, User, Product, CartItem

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞ ===
TELEGRAM_BOT_TOKEN = '8458514538:AAFIAT7BrKelIHie9-JscBnOlAFd_V2qyMY'
ADMIN_CHAT_ID = '1172834372'
BASE_URL = 'https://api.telegram.org/bot'

def send_telegram_message(text, chat_id, reply_markup=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
    try:
        url = f"{BASE_URL}{TELEGRAM_BOT_TOKEN}/sendMessage"
        payload = {
            'chat_id': chat_id,
            'text': text,
            'parse_mode': 'HTML'
        }
        if reply_markup:
            payload['reply_markup'] = json.dumps(reply_markup)
        response = requests.post(url, data=payload, timeout=5)
        return response.json()
    except Exception as e:
        print(f"Telegram send error: {e}")
        return None

def get_user_stats():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    with app.app_context():
        total_users = User.query.count()
        admins = User.query.filter_by(is_admin=True).count()
        banned = User.query.filter_by(is_banned=True).count()
        active = total_users - banned
        total_products = Product.query.count()
        
        return {
            'total_users': total_users,
            'admins': admins,
            'banned': banned,
            'active': active,
            'total_products': total_products
        }

def get_user_list():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    with app.app_context():
        users = User.query.all()
        result = []
        for user in users:
            result.append({
                'id': user.id,
                'username': user.username,
                'email': user.email,
                'balance': user.balance,
                'telegram': f"@{user.telegram_username}" if user.telegram_username else "–ù–µ —É–∫–∞–∑–∞–Ω",
                'telegram_status': "üì± –ù–∞—Å—Ç—Ä–æ–µ–Ω" if user.telegram_chat_id else "‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω",
                'created_at': user.created_at.strftime('%d.%m.%Y'),
                'status': "üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" if user.is_banned else "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω"
            })
        return result

def find_user_by_username(username):
    """–ù–∞—Ö–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏"""
    with app.app_context():
        user = User.query.filter_by(username=username).first()
        return user

def change_balance(user_id, amount):
    """–ò–∑–º–µ–Ω—è–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    with app.app_context():
        user = User.query.get(user_id)
        if user:
            old_balance = user.balance
            user.balance = float(amount)
            db.session.commit()
            return f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} –∏–∑–º–µ–Ω–µ–Ω —Å {old_balance}‚ÇΩ –Ω–∞ {amount}‚ÇΩ"
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"

def ban_user(user_id):
    """–ë–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    with app.app_context():
        user = User.query.get(user_id)
        if user:
            user.is_banned = True
            db.session.commit()
            return f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"

def unban_user(user_id):
    """–†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    with app.app_context():
        user = User.query.get(user_id)
        if user:
            user.is_banned = False
            db.session.commit()
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"

def make_admin(user_id):
    """–î–µ–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–æ–º"""
    with app.app_context():
        user = User.query.get(user_id)
        if user:
            user.is_admin = True
            db.session.commit()
            return f"üëë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"

def remove_admin(user_id):
    """–£–±–∏—Ä–∞–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞"""
    with app.app_context():
        user = User.query.get(user_id)
        if user:
            user.is_admin = False
            db.session.commit()
            return f"üë§ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} —É–±—Ä–∞–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"

def delete_user_admin(user_id):
    """–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    with app.app_context():
        user = User.query.get(user_id)
        if user:
            username = user.username
            db.session.delete(user)
            db.session.commit()
            return f"üóëÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É–¥–∞–ª–µ–Ω"
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"

def get_main_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
    return {
        'inline_keyboard': [
            [
                {'text': 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'callback_data': 'stats'},
                {'text': 'üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', 'callback_data': 'users'}
            ],
            [
                {'text': 'üí∞ –ë–∞–ª–∞–Ω—Å', 'callback_data': 'balance'},
                {'text': 'üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', 'callback_data': 'management'}
            ],
            [
                {'text': '‚ùì –ü–æ–º–æ—â—å', 'callback_data': 'help'}
            ]
        ]
    }

def get_balance_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–º"""
    return {
        'inline_keyboard': [
            [
                {'text': 'üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', 'callback_data': 'change_balance'},
                {'text': 'üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–ª–∞–Ω—Å–æ–≤', 'callback_data': 'view_balances'}
            ],
            [
                {'text': 'üîô –ù–∞–∑–∞–¥', 'callback_data': 'main'}
            ]
        ]
    }

def get_user_actions_keyboard(user_id):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    return {
        'inline_keyboard': [
            [
                {'text': 'üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', 'callback_data': f'balance_user_{user_id}'},
                {'text': 'üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', 'callback_data': f'ban_user_{user_id}'}
            ],
            [
                {'text': '‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', 'callback_data': f'unban_user_{user_id}'},
                {'text': 'üëë –°–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–æ–º', 'callback_data': f'admin_user_{user_id}'}
            ],
            [
                {'text': 'üë§ –£–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∞', 'callback_data': f'remove_admin_user_{user_id}'},
                {'text': 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å', 'callback_data': f'delete_user_{user_id}'}
            ],
            [
                {'text': 'üîô –ù–∞–∑–∞–¥', 'callback_data': 'main'}
            ]
        ]
    }

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
pending_balance_change = {}

def handle_balance_change(username, amount):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user = find_user_by_username(username)
    if user:
        old_balance = user.balance
        user.balance = float(amount)
        db.session.commit()
        return f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} –∏–∑–º–µ–Ω–µ–Ω —Å {old_balance}‚ÇΩ –Ω–∞ {amount}‚ÇΩ"
    return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"

def handle_admin_command(message_text, chat_id):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã"""
    if chat_id != ADMIN_CHAT_ID:
        return "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", None
    
    text = message_text.strip()
    
    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if text.lower() in ['/start', '/help', '–º–µ–Ω—é', 'start', 'help']:
        return "üîß <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å Nexus Dark</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", get_main_keyboard()

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    elif text.lower() in ['—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'stats', '—Å—Ç–∞—Ç']:
        stats = get_user_stats()
        return f"""üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</b>

üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:
‚Ä¢ –í—Å–µ–≥–æ: {stats['total_users']}
‚Ä¢ –ê–¥–º–∏–Ω–æ–≤: {stats['admins']}
‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {stats['banned']}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {stats['active']}

üì¶ –¢–æ–≤–∞—Ä—ã: {stats['total_products']}""", get_main_keyboard()
    
    # –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    elif text.lower() in ['–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', 'users', '—é–∑–µ—Ä—ã']:
        users = get_user_list()
        if not users:
            return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", get_main_keyboard()
        
        text_result = "üë• <b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
        for user in users[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 10
            text_result += f"<code>{user['username']}</code> (ID: {user['id']})\n"
            text_result += f"üìß {user['email']}\n"
            text_result += f"üí∞ –ë–∞–ª–∞–Ω—Å: {user['balance']}‚ÇΩ\n"
            text_result += f"üì± Telegram: {user['telegram']} ({user['telegram_status']})\n"
            text_result += f"üìÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {user['created_at']}\n"
            text_result += f"üîπ {user['status']}\n\n"
        
        if len(users) > 10:
            text_result += f"... –∏ –µ—â–µ {len(users) - 10} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        
        return text_result, get_main_keyboard()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–∏—Å–ª–æ–º (–¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞)
    elif text.replace('.', '').replace(',', '').isdigit():
        try:
            amount = float(text.replace(',', '.'))
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É–º–º—É –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            pending_balance_change[chat_id] = amount
            return f"üí∞ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>\n\n–°—É–º–º–∞: <b>{amount}‚ÇΩ</b>\n\n–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", get_balance_keyboard()
        except ValueError:
            return "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞", get_balance_keyboard()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    else:
        user = find_user_by_username(text)
        if user:
            return f"""üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω</b>

<b>–ò–º—è:</b> <code>{user.username}</code>
<b>Email:</b> {user.email}
<b>–ë–∞–ª–∞–Ω—Å:</b> {user.balance}‚ÇΩ
<b>–°—Ç–∞—Ç—É—Å:</b> {'üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' if user.is_banned else '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω'}
<b>–ê–¥–º–∏–Ω:</b> {'üëë –î–∞' if user.is_admin else 'üë§ –ù–µ—Ç'}
<b>Telegram:</b> {'üì± –ù–∞—Å—Ç—Ä–æ–µ–Ω' if user.telegram_chat_id else '‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:""", get_user_actions_keyboard(user.id)
        else:
            return f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{text}' –Ω–µ –Ω–∞–π–¥–µ–Ω\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n‚Ä¢ –í–≤–µ—Å—Ç–∏ —Ç–æ—á–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫: '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'", get_main_keyboard()

def handle_callback_query(callback_data, chat_id):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
    if chat_id != ADMIN_CHAT_ID:
        return "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", None
    
    if callback_data == 'main':
        return "üîß <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å Nexus Dark</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", get_main_keyboard()
    
    elif callback_data == 'stats':
        stats = get_user_stats()
        return f"""üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</b>

üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:
‚Ä¢ –í—Å–µ–≥–æ: {stats['total_users']}
‚Ä¢ –ê–¥–º–∏–Ω–æ–≤: {stats['admins']}
‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {stats['banned']}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {stats['active']}

üì¶ –¢–æ–≤–∞—Ä—ã: {stats['total_products']}""", get_main_keyboard()
    
    elif callback_data == 'users':
        users = get_user_list()
        if not users:
            return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", get_main_keyboard()
        
        text = "üë• <b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
        for user in users[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 10
            text += f"<code>{user['username']}</code> (ID: {user['id']})\n"
            text += f"üìß {user['email']}\n"
            text += f"üí∞ –ë–∞–ª–∞–Ω—Å: {user['balance']}‚ÇΩ\n"
            text += f"üì± Telegram: {user['telegram']} ({user['telegram_status']})\n"
            text += f"üìÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {user['created_at']}\n"
            text += f"üîπ {user['status']}\n\n"
        
        if len(users) > 10:
            text += f"... –∏ –µ—â–µ {len(users) - 10} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        
        return text, get_main_keyboard()
    
    elif callback_data == 'balance':
        return "üí∞ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞–º–∏</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", get_balance_keyboard()
    
    elif callback_data == 'view_balances':
        users = get_user_list()
        if not users:
            return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", get_balance_keyboard()
        
        text = "üí∞ <b>–ë–∞–ª–∞–Ω—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
        for user in users[:15]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 15
            text += f"<code>{user['username']}</code> (ID: {user['id']}): {user['balance']}‚ÇΩ\n"
        
        if len(users) > 15:
            text += f"\n... –∏ –µ—â–µ {len(users) - 15} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        
        return text, get_balance_keyboard()
    
    elif callback_data == 'change_balance':
        return "üí∞ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>\n\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1000 –∏–ª–∏ 1500.50)", get_balance_keyboard()
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    elif callback_data.startswith('balance_user_'):
        user_id = int(callback_data.split('_')[2])
        user = User.query.get(user_id)
        if user:
            return f"üí∞ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{user.username}</code>\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: <b>{user.balance}‚ÇΩ</b>\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—É–º–º—É:", get_balance_keyboard()
        else:
            return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", get_main_keyboard()
    
    elif callback_data.startswith('ban_user_'):
        user_id = int(callback_data.split('_')[2])
        result = ban_user(user_id)
        return result, get_main_keyboard()
    
    elif callback_data.startswith('unban_user_'):
        user_id = int(callback_data.split('_')[2])
        result = unban_user(user_id)
        return result, get_main_keyboard()
    
    elif callback_data.startswith('admin_user_'):
        user_id = int(callback_data.split('_')[2])
        result = make_admin(user_id)
        return result, get_main_keyboard()
    
    elif callback_data.startswith('remove_admin_user_'):
        user_id = int(callback_data.split('_')[3])
        result = remove_admin(user_id)
        return result, get_main_keyboard()
    
    elif callback_data.startswith('delete_user_'):
        user_id = int(callback_data.split('_')[2])
        result = delete_user_admin(user_id)
        return result, get_main_keyboard()
    
    elif callback_data == 'help':
        return """‚ùì <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏</b>

üîß <b>–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>
‚Ä¢ üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã
‚Ä¢ üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
‚Ä¢ üí∞ –ë–∞–ª–∞–Ω—Å - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
‚Ä¢ üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

üí° <b>–°–æ–≤–µ—Ç—ã:</b>
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
‚Ä¢ –ò–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –º–æ–∂–Ω–æ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ø–æ –Ω–∞–∂–∞—Ç–∏—é
‚Ä¢ –ü—Ä–æ—Å—Ç–æ –≤–≤–æ–¥–∏—Ç–µ –∏–º–µ–Ω–∞ –∏ —Ü–∏—Ñ—Ä—ã –±–µ–∑ –∫–æ–º–∞–Ω–¥
‚Ä¢ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏""", get_main_keyboard()
    
    else:
        return "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ", get_main_keyboard()

def get_updates(offset=None):
    """–ü–æ–ª—É—á–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram"""
    try:
        url = f"{BASE_URL}{TELEGRAM_BOT_TOKEN}/getUpdates"
        params = {'timeout': 30}
        if offset:
            params['offset'] = offset
        
        response = requests.get(url, params=params, timeout=35)
        return response.json()
    except Exception as e:
        print(f"Get updates error: {e}")
        return None

def telegram_bot_worker():
    """–†–∞–±–æ—á–∏–π –ø–æ—Ç–æ–∫ –¥–ª—è Telegram –±–æ—Ç–∞"""
    print("ü§ñ Telegram –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    print("üì± –ê–¥–º–∏–Ω chat_id:", ADMIN_CHAT_ID)
    last_update_id = None
    
    while True:
        try:
            updates = get_updates(last_update_id)
            
            if not updates or not updates.get('ok'):
                print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
                time.sleep(5)
                continue
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            for update in updates.get('result', []):
                last_update_id = update['update_id'] + 1
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
                if 'message' in update:
                    message = update['message']
                    chat_id = str(message['chat']['id'])
                    text = message.get('text', '')
                    
                    print(f"üì± –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {chat_id}: {text}")
                    
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã
                    if chat_id == ADMIN_CHAT_ID:
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç—Å—è –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
                        if chat_id in pending_balance_change:
                            amount = pending_balance_change[chat_id]
                            result = handle_balance_change(text, amount)
                            del pending_balance_change[chat_id]
                            send_telegram_message(result, chat_id, get_main_keyboard())
                            print(f"‚úÖ –ò–∑–º–µ–Ω–µ–Ω –±–∞–ª–∞–Ω—Å: {result}")
                        else:
                            response, keyboard = handle_admin_command(text, chat_id)
                            send_telegram_message(response, chat_id, keyboard)
                            print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç: {response[:50]}...")
                    else:
                        print(f"‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –Ω–µ–∞–¥–º–∏–Ω–∞: {chat_id}")
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback –∑–∞–ø—Ä–æ—Å—ã (–Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏)
                elif 'callback_query' in update:
                    callback_query = update['callback_query']
                    chat_id = str(callback_query['message']['chat']['id'])
                    callback_data = callback_query['data']
                    
                    print(f"üîò –ü–æ–ª—É—á–µ–Ω callback –æ—Ç {chat_id}: {callback_data}")
                    
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω callback'–∏
                    if chat_id == ADMIN_CHAT_ID:
                        response, keyboard = handle_callback_query(callback_data, chat_id)
                        send_telegram_message(response, chat_id, keyboard)
                        print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ callback: {response[:50]}...")
                        
                        # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
                        try:
                            answer_url = f"{BASE_URL}{TELEGRAM_BOT_TOKEN}/answerCallbackQuery"
                            answer_payload = {'callback_query_id': callback_query['id']}
                            requests.post(answer_url, data=answer_payload, timeout=5)
                        except Exception as e:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ callback: {e}")
                    else:
                        print(f"‚ö†Ô∏è Callback –æ—Ç –Ω–µ–∞–¥–º–∏–Ω–∞: {chat_id}")
            
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            time.sleep(1)
            
        except KeyboardInterrupt:
            print("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
            break
        except Exception as e:
            print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
            time.sleep(5)

def start_telegram_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram –±–æ—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    bot_thread = threading.Thread(target=telegram_bot_worker, daemon=True)
    bot_thread.start()
    print("‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")

if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç –≤ —Ñ–æ–Ω–µ
    start_telegram_bot()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    port = int(os.environ.get('PORT', 5000))
    print(f"üöÄ –ó–∞–ø—É—Å–∫ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    app.run(host='0.0.0.0', port=port, debug=False)
