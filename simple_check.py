import sqlite3
import os

print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
print("=" * 40)

db_path = "instance/nexus_dark.db"

if not os.path.exists(db_path):
    print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
    exit()

print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞: {db_path}")

try:
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã user
    print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã user:")
    cursor.execute("PRAGMA table_info(user)")
    columns = cursor.fetchall()
    
    for col in columns:
        print(f"  - {col[1]} ({col[2]})")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω—É–∂–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫
    column_names = [col[1] for col in columns]
    required_columns = ['telegram_username', 'telegram_chat_id', 'telegram_setup_token']
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–ª–æ–Ω–æ–∫:")
    for col in required_columns:
        if col in column_names:
            print(f"  ‚úÖ {col}")
        else:
            print(f"  ‚ùå {col} - –û–¢–°–£–¢–°–¢–í–£–ï–¢!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\nüë• –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    cursor.execute("SELECT id, username, telegram_username, telegram_chat_id, telegram_setup_token FROM user")
    users = cursor.fetchall()
    
    if not users:
        print("  ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        for user in users:
            print(f"\n  üë§ ID: {user[0]}, Username: {user[1]}")
            print(f"     Telegram username: {user[2] or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
            print(f"     Telegram chat_id: {user[3] or '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
            print(f"     Setup token: {user[4] or '–ù–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω'}")
    
    conn.close()
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")


