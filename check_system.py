#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
import sqlite3
from app import app, db, User, Product, CartItem

def check_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        with app.app_context():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
            db.engine.connect()
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: OK")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
            tables = ['user', 'product', 'cart_item']
            for table in tables:
                try:
                    result = db.engine.execute(f"SELECT COUNT(*) FROM {table}")
                    count = result.fetchone()[0]
                    print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ {table}: {count} –∑–∞–ø–∏—Å–µ–π")
                except Exception as e:
                    print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ {table}: –û–®–ò–ë–ö–ê - {e}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã product
            try:
                result = db.engine.execute("PRAGMA table_info(product)")
                columns = [row[1] for row in result]
                print(f"üìã –°—Ç–æ–ª–±—Ü—ã —Ç–∞–±–ª–∏—Ü—ã product: {columns}")
                
                if 'stock' in columns:
                    print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'stock' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                else:
                    print("‚ùå –°—Ç–æ–ª–±–µ—Ü 'stock' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã product: {e}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã user
            try:
                result = db.engine.execute("PRAGMA table_info(user)")
                columns = [row[1] for row in result]
                print(f"üìã –°—Ç–æ–ª–±—Ü—ã —Ç–∞–±–ª–∏—Ü—ã user: {columns}")
                
                required_columns = ['telegram_username', 'telegram_chat_id', 'is_banned', 'is_admin']
                for col in required_columns:
                    if col in columns:
                        print(f"‚úÖ –°—Ç–æ–ª–±–µ—Ü '{col}' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                    else:
                        print(f"‚ùå –°—Ç–æ–ª–±–µ—Ü '{col}' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã user: {e}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")

def check_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤...")
    
    required_files = [
        'app.py',
        'admin_bot.py',
        'config.py',
        'requirements.txt',
        'Procfile',
        'runtime.txt',
        '.gitignore',
        'README.md'
    ]
    
    for file in required_files:
        if os.path.exists(file):
            print(f"‚úÖ {file}")
        else:
            print(f"‚ùå {file} - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫–∏
    required_dirs = ['templates', 'static', 'instance']
    for dir_name in required_dirs:
        if os.path.exists(dir_name):
            print(f"‚úÖ –ü–∞–ø–∫–∞ {dir_name}/")
        else:
            print(f"‚ùå –ü–∞–ø–∫–∞ {dir_name}/ - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

def check_telegram():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram...")
    
    try:
        import requests
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
        token = '8458514538:AAFIAT7BrKelIHie9-JscBnOlAFd_V2qyMY'
        url = f"https://api.telegram.org/bot{token}/getMe"
        
        response = requests.get(url, timeout=5)
        if response.status_code == 200:
            data = response.json()
            if data.get('ok'):
                bot_info = data['result']
                print(f"‚úÖ Telegram –±–æ—Ç: @{bot_info['username']} ({bot_info['first_name']})")
            else:
                print(f"‚ùå Telegram –±–æ—Ç: –û—à–∏–±–∫–∞ - {data}")
        else:
            print(f"‚ùå Telegram –±–æ—Ç: HTTP {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram: {e}")

def main():
    print("üõí Nexus Dark Market - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 50)
    
    check_files()
    check_database()
    check_telegram()
    
    print("\n" + "=" * 50)
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    main()
