#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å Telegram –±–æ—Ç–æ–º
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def check_bot_file():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –±–æ—Ç–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª telegram_bot.py...")
    
    if not os.path.exists('telegram_bot.py'):
        print("   ‚ùå –§–∞–π–ª telegram_bot.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print("   ‚úÖ –§–∞–π–ª telegram_bot.py –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    file_size = os.path.getsize('telegram_bot.py')
    print(f"   üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
    
    if file_size < 1000:
        print("   ‚ö†Ô∏è –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π, –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω")
        return False
    
    return True

def check_bot_imports():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –±–æ—Ç–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –±–æ—Ç–∞...")
    
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
        import requests
        import json
        import os
        import time
        from datetime import datetime
        
        print("   ‚úÖ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        from app import app, db, User, Product, CartItem
        
        print("   ‚úÖ –ú–æ–¥—É–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

def check_bot_functions():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞...")
    
    try:
        from telegram_bot import (
            TELEGRAM_BOT_TOKEN, ADMIN_CHAT_ID,
            get_user_state, set_user_state, clear_user_state,
            create_inline_keyboard, send_telegram_message,
            get_user_stats, get_user_list, get_main_menu,
            handle_callback_query, process_telegram_update
        )
        
        print("   ‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        if TELEGRAM_BOT_TOKEN and ADMIN_CHAT_ID:
            print("   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("   ‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–ø–æ–ª–Ω–∞—è")
            return False
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π: {e}")
        return False

def test_bot_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram API"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram API...")
    
    try:
        from telegram_bot import TELEGRAM_BOT_TOKEN, send_telegram_message, ADMIN_CHAT_ID
        
        # –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        test_message = "üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–æ—Ç–∞"
        
        print("   üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        result = send_telegram_message(test_message, ADMIN_CHAT_ID)
        
        if result:
            print("   ‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            return True
        else:
            print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def check_duplicate_functions():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π...")
    
    try:
        with open('telegram_bot.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
        functions = [
            'def ban_user_by_username',
            'def unban_user_by_username',
            'def make_admin_by_username',
            'def remove_admin_by_username',
            'def delete_user_by_username'
        ]
        
        duplicates = []
        for func in functions:
            count = content.count(func)
            if count > 1:
                duplicates.append(func)
                print(f"   ‚ö†Ô∏è –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏: {func} ({count} —Ä–∞–∑)")
        
        if duplicates:
            print(f"   ‚ùå –ù–∞–π–¥–µ–Ω–æ {len(duplicates)} –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π")
            return False
        else:
            print("   ‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return True
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False

def fix_bot_issues():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º...")
    
    try:
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
        with open('telegram_bot.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É callback query
        if 'answer_callback_query(callback_query[\'id\'])' in content:
            print("   ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ callback query –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("   ‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ callback query –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω–æ–π")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏
        if 'get_user_state' in content and 'set_user_state' in content:
            print("   ‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –Ω–∞–π–¥–µ–Ω–æ")
        else:
            print("   ‚ö†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
        if 'try:' in content and 'except' in content:
            print("   ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("   ‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–π")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å Telegram –±–æ—Ç–æ–º")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –§–∞–π–ª –±–æ—Ç–∞
    file_ok = check_bot_file()
    
    print("\n" + "=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ò–º–ø–æ—Ä—Ç—ã
    imports_ok = check_bot_imports()
    
    print("\n" + "=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –§—É–Ω–∫—Ü–∏–∏
    functions_ok = check_bot_functions()
    
    print("\n" + "=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
    duplicates_ok = check_duplicate_functions()
    
    print("\n" + "=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 5: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API
    connection_ok = test_bot_connection()
    
    print("\n" + "=" * 60)
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º
    fix_ok = fix_bot_issues()
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"   –§–∞–π–ª –±–æ—Ç–∞: {'‚úÖ' if file_ok else '‚ùå'}")
    print(f"   –ò–º–ø–æ—Ä—Ç—ã: {'‚úÖ' if imports_ok else '‚ùå'}")
    print(f"   –§—É–Ω–∫—Ü–∏–∏: {'‚úÖ' if functions_ok else '‚ùå'}")
    print(f"   –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: {'‚úÖ' if duplicates_ok else '‚ùå'}")
    print(f"   –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API: {'‚úÖ' if connection_ok else '‚ùå'}")
    print(f"   –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {'‚úÖ' if fix_ok else '‚ùå'}")
    
    if all([file_ok, imports_ok, functions_ok, duplicates_ok, connection_ok, fix_ok]):
        print("\nüéâ Telegram –±–æ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("\nüìã –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python telegram_bot.py")
        print("2. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∏ –Ω–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞")
        print("3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start")
        print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫")
        print("5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å Telegram –±–æ—Ç–æ–º")
        print("\nüîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ chat_id –∞–¥–º–∏–Ω–∞")
        print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
        print("5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç: python test_telegram_bot.py")

if __name__ == "__main__":
    main()
