#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —á–∞—Ç–∞
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def fix_database():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        from app import app, db, User, Product, Message
        from sqlalchemy import text
        
        with app.app_context():
            # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É message
            try:
                db.session.execute(text("DROP TABLE IF EXISTS message"))
                db.session.commit()
                print("   üóëÔ∏è –°—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ message —É–¥–∞–ª–µ–Ω–∞")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã: {e}")
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
            try:
                db.create_all()
                print("   ‚úÖ –ù–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ message —Å–æ–∑–¥–∞–Ω–∞")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ
                message_count = Message.query.count()
                print(f"   üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {message_count}")
                
                return True
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã: {e}")
                return False
                
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_message_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    
    try:
        from app import app, db, User, Product, Message
        
        with app.app_context():
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ç–æ–≤–∞—Ä
            user = User.query.first()
            product = Product.query.first()
            
            if not user or not product:
                print("   ‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                return False
            
            print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username} (ID: {user.id})")
            print(f"   üì¶ –¢–æ–≤–∞—Ä: {product.name} (ID: {product.id})")
            print(f"   üë§ –ü—Ä–æ–¥–∞–≤–µ—Ü: {product.seller.username} (ID: {product.seller_id})")
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            test_message = Message(
                sender_id=user.id,
                receiver_id=product.seller_id,
                product_id=product.id,
                content="–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–∞—Ç–∞",
                is_read=False
            )
            
            db.session.add(test_message)
            db.session.commit()
            
            print(f"   ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —Å ID: {test_message.id}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
            saved_message = Message.query.get(test_message.id)
            if saved_message:
                print(f"   ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ: {saved_message.content}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è —á–∞—Ç–∞
                chat_messages = Message.query.filter(
                    ((Message.sender_id == user.id) & (Message.receiver_id == product.seller_id)) |
                    ((Message.sender_id == product.seller_id) & (Message.receiver_id == user.id))
                ).filter(Message.product_id == product.id).order_by(Message.created_at.asc()).all()
                
                print(f"   üìù –°–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ: {len(chat_messages)}")
                
                # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                db.session.delete(saved_message)
                db.session.commit()
                print("   ‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ")
                
                return True
            else:
                print("   ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
                return False
                
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        db.session.rollback()
        return False

def check_telegram_bot():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –±–æ—Ç–∞"""
    print("ü§ñ –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –±–æ—Ç–∞...")
    
    try:
        from app import send_telegram_message
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if callable(send_telegram_message):
            print("   ‚úÖ –§—É–Ω–∫—Ü–∏—è send_telegram_message –Ω–∞–π–¥–µ–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å telegram_chat_id
            from app import User
            with app.app_context():
                users_with_telegram = User.query.filter(User.telegram_chat_id.isnot(None)).count()
                print(f"   üì± –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å Telegram: {users_with_telegram}")
                
                if users_with_telegram > 0:
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
                    users = User.query.filter(User.telegram_chat_id.isnot(None)).limit(3).all()
                    for user in users:
                        print(f"      - {user.username}: {user.telegram_chat_id}")
                
                return True
        else:
            print("   ‚ùå –§—É–Ω–∫—Ü–∏—è send_telegram_message –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram: {e}")
        return False

def fix_chat_template():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω —á–∞—Ç–∞"""
    print("üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω —á–∞—Ç–∞...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if os.path.exists('templates/chat.html'):
            print("   ‚úÖ –§–∞–π–ª templates/chat.html —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            with open('templates/chat.html', 'r', encoding='utf-8') as f:
                content = f.read()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            checks = [
                ('chat-container', '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —á–∞—Ç–∞'),
                ('message-form', '–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏'),
                ('message-input', '–ü–æ–ª–µ –≤–≤–æ–¥–∞'),
                ('addMessageToChat', '–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è'),
                ('fetch(\'/send_message\'', 'AJAX –∑–∞–ø—Ä–æ—Å'),
                ('showNotification', '–§—É–Ω–∫—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π')
            ]
            
            for check, description in checks:
                if check in content:
                    print(f"   ‚úÖ {description} –Ω–∞–π–¥–µ–Ω")
                else:
                    print(f"   ‚ùå {description} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return False
            
            return True
        else:
            print("   ‚ùå –§–∞–π–ª templates/chat.html –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —à–∞–±–ª–æ–Ω–∞: {e}")
        return False

def create_test_data():
    """–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    print("üìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...")
    
    try:
        from app import app, db, User, Product, Message
        from werkzeug.security import generate_password_hash
        
        with app.app_context():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
            user_count = User.query.count()
            if user_count == 0:
                print("   üë§ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
                test_user = User(
                    username='testuser',
                    email='test@example.com',
                    password_hash=generate_password_hash('password123'),
                    balance=1000.0,
                    telegram_username='testuser',
                    telegram_chat_id='123456789'
                )
                db.session.add(test_user)
                db.session.commit()
                print("   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä—ã
            product_count = Product.query.count()
            if product_count == 0:
                print("   üì¶ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä...")
                user = User.query.first()
                test_product = Product(
                    name='–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä',
                    description='–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞',
                    price=100.0,
                    stock=10,
                    seller_id=user.id
                )
                db.session.add(test_product)
                db.session.commit()
                print("   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω")
            
            print(f"   üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {User.query.count()}")
            print(f"   üìä –¢–æ–≤–∞—Ä–æ–≤: {Product.query.count()}")
            
            return True
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —á–∞—Ç–∞")
    print("=" * 60)
    
    # –®–∞–≥ 1: –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    print("1Ô∏è‚É£ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    db_ok = fix_database()
    
    print("\n" + "=" * 60)
    
    # –®–∞–≥ 2: –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("2Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...")
    data_ok = create_test_data()
    
    print("\n" + "=" * 60)
    
    # –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    print("3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    message_ok = test_message_creation()
    
    print("\n" + "=" * 60)
    
    # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –±–æ—Ç–∞
    print("4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –±–æ—Ç–∞...")
    telegram_ok = check_telegram_bot()
    
    print("\n" + "=" * 60)
    
    # –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω —á–∞—Ç–∞
    print("5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω —á–∞—Ç–∞...")
    template_ok = fix_chat_template()
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    print(f"   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {'‚úÖ' if db_ok else '‚ùå'}")
    print(f"   –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: {'‚úÖ' if data_ok else '‚ùå'}")
    print(f"   –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π: {'‚úÖ' if message_ok else '‚ùå'}")
    print(f"   Telegram –±–æ—Ç: {'‚úÖ' if telegram_ok else '‚ùå'}")
    print(f"   –®–∞–±–ª–æ–Ω —á–∞—Ç–∞: {'‚úÖ' if template_ok else '‚ùå'}")
    
    if all([db_ok, data_ok, message_ok, telegram_ok, template_ok]):
        print("\nüéâ –°–∏—Å—Ç–µ–º–∞ —á–∞—Ç–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        print("\nüìã –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python app.py")
        print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://localhost:5000")
        print("3. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å (testuser / password123)")
        print("4. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Ç–æ–≤–∞—Ä—É")
        print("5. –ù–∞–∂–º–∏—Ç–µ 'üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü—É'")
        print("6. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        print("7. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)")
        print("8. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        return True
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–∏—Å—Ç–µ–º–æ–π —á–∞—Ç–∞")
        print("\nüîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Telegram –≤ config.py")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
