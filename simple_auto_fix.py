#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ü—Ä–æ—Å—Ç–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞
"""

import requests
import json
import time
import subprocess

def run_command(command):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É"""
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True, encoding='utf-8')
        return result.returncode == 0, result.stdout, result.stderr
    except Exception as e:
        return False, "", str(e)

def test_bot():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–æ—Ç–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞...")
    
    webhook_url = "https://nexus-dark-market.onrender.com/telegram/webhook"
    
    # 1. /start
    print("1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º /start")
    message = {
        "update_id": 1,
        "message": {
            "message_id": 1,
            "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
            "chat": {"id": 1172834372, "type": "private"},
            "date": int(time.time()),
            "text": "/start"
        }
    }
    requests.post(webhook_url, json=message, timeout=5)
    time.sleep(1)
    
    # 2. –ö–Ω–æ–ø–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞
    print("2. –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞")
    callback = {
        "update_id": 2,
        "callback_query": {
            "id": "test",
            "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
            "message": {
                "message_id": 1,
                "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
                "chat": {"id": 1172834372, "type": "private"},
                "date": int(time.time()),
                "text": "/start"
            },
            "data": "change_admin_username"
        }
    }
    requests.post(webhook_url, json=callback, timeout=5)
    time.sleep(1)
    
    # 3. –í–≤–æ–¥ –ª–æ–≥–∏–Ω–∞
    print("3. –í–≤–æ–¥–∏–º –ª–æ–≥–∏–Ω 'testuser123'")
    message = {
        "update_id": 3,
        "message": {
            "message_id": 2,
            "from": {"id": 1172834372, "is_bot": False, "first_name": "Test"},
            "chat": {"id": 1172834372, "type": "private"},
            "date": int(time.time()),
            "text": "testuser123"
        }
    }
    response = requests.post(webhook_url, json=message, timeout=5)
    
    print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
    if response.status_code == 200:
        result = response.json()
        print(f"   –û—Ç–≤–µ—Ç: {result}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫—É
        if result.get('ok'):
            if 'result' in result and 'text' in result['result']:
                text = result['result']['text']
                if "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞" in text:
                    print("   ‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–ê –û–®–ò–ë–ö–ê!")
                    return False
                else:
                    print("   ‚úÖ –£–°–ü–ï–•!")
                    return True
            else:
                print("   ‚úÖ –£–°–ü–ï–•!")
                return True
        else:
            print("   ‚ùå –û—à–∏–±–∫–∞ API")
            return False
    else:
        print("   ‚ùå HTTP –æ—à–∏–±–∫–∞")
        return False

def fix_code():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–¥"""
    print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞...")
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open('telegram_bot.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–±–ª–µ–º–∞
    if "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞" in content:
        print("   –ù–∞–π–¥–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ")
        
        # –ò—â–µ–º –ø—Ä–æ–±–ª–µ–º–Ω–æ–µ –º–µ—Å—Ç–æ
        lines = content.split('\n')
        new_lines = []
        
        for i, line in enumerate(lines):
            if "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞" in line:
                print(f"   –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É {i+1}")
                # –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                new_lines.append('                return "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é", get_main_menu()')
            else:
                new_lines.append(line)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open('telegram_bot.py', 'w', encoding='utf-8') as f:
            f.write('\n'.join(new_lines))
        
        print("   ‚úÖ –ö–æ–¥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
        return True
    else:
        print("   ‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False

def update_repo():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"""
    print("\nüöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
    success, stdout, stderr = run_command("git add .")
    if not success:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ git add: {stderr}")
        return False
    
    # –ö–æ–º–º–∏—Ç–∏–º
    success, stdout, stderr = run_command('git commit -m "Auto-fix: resolve unknown command error"')
    if not success:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ git commit: {stderr}")
        return False
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
    success, stdout, stderr = run_command("git push origin main")
    if not success:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ git push: {stderr}")
        return False
    
    print("   ‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω")
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –ü–†–û–°–¢–û–ô –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –°–ö–†–ò–ü–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–æ—Ç–∞
    success = test_bot()
    
    if not success:
        print("\n‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–ê –û–®–ò–ë–ö–ê!")
        print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º...")
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥
        if fix_code():
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
            if update_repo():
                print("\n‚è≥ –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è...")
                time.sleep(30)
                
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–Ω–æ–≤–∞
                print("\nüß™ –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")
                success = test_bot()
                
                if success:
                    print("\nüéâ –û–®–ò–ë–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
                else:
                    print("\n‚ùå –û—à–∏–±–∫–∞ –≤—Å–µ –µ—â–µ –µ—Å—Ç—å")
            else:
                print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
        else:
            print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥")
    else:
        print("\n‚úÖ –û–®–ò–ë–ö–ò –ù–ï–¢!")
    
    print("\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"   –°—Ç–∞—Ç—É—Å: {'‚úÖ –£—Å–ø–µ—Ö' if success else '‚ùå –û—à–∏–±–∫–∞'}")
    print("   –ë–æ—Ç: @NexusDarkBot")
    print("   –°–∞–π—Ç: https://nexus-dark-market.onrender.com")

if __name__ == "__main__":
    main()
